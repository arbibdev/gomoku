{"ast":null,"code":"import { getBoard } from \"./tools\";\nconst singleStoneHeuristic = (board, node, data) => {\n  var h = 10;\n  var free = 1;\n  if (node.y - 1 >= 0 && !board[node.y - 1][node.x]) free += 1;\n  if (node.x + 1 < 19 && !board[node.y][node.x + 1]) free += 1;\n  if (node.y + 1 < 19 && !board[node.y + 1][node.x]) free += 1;\n  if (node.x - 1 >= 0 && !board[node.y][node.x - 1]) free += 1;\n  h = h * free;\n  if (board[node.y][node.x] === data.iaColor) return h;\n  return -h;\n};\nconst verticalAlignment = (board, node) => {\n  var color = node.color;\n  var pos = {\n    x: node.x,\n    y: node.y\n  };\n  var neighbour1 = 1;\n  while (pos.y > 0 && board[pos.y][pos.x] === color) {\n    pos.y -= 1;\n  }\n  if (pos.y > 0 && !board[pos.y][pos.x]) neighb;\n};\nconst alignmentHeuristic = (board, node, data) => {\n  var h = 0;\n  h += verticalAlignment(board, node);\n};\nconst getHeuristic = (node, data) => {\n  const start = window.performance.now();\n  var board = getBoard(node, data.board);\n  var h1 = 0;\n  var h2 = 0;\n  while (node.parent) {\n    h1 += singleStoneHeuristic(board, node, data);\n    h2 += alignmentHeuristic(board, node);\n    node = node.parent;\n  }\n  const end = window.performance.now();\n  data.heuristicTime += end - start;\n  return h1 + h2;\n};\nexport default getHeuristic;","map":{"version":3,"names":["getBoard","singleStoneHeuristic","board","node","data","h","free","y","x","iaColor","verticalAlignment","color","pos","neighbour1","neighb","alignmentHeuristic","getHeuristic","start","window","performance","now","h1","h2","parent","end","heuristicTime"],"sources":["/Users/adauchy/work/ft/myGomokuGit/gomoku/src/tools/ia/heuristic2.js"],"sourcesContent":["import { getBoard } from \"./tools\"\n\nconst singleStoneHeuristic = (board, node, data) => {\n    var h = 10\n    var free = 1\n    if (node.y - 1 >= 0 && !board[node.y - 1][node.x])\n        free +=1\n    if (node.x + 1 < 19 && !board[node.y][node.x + 1])\n        free +=1\n    if (node.y + 1 < 19 && !board[node.y + 1][node.x])\n        free +=1\n    if (node.x - 1 >= 0 && !board[node.y][node.x - 1])\n        free +=1\n    h = h * free\n    if (board[node.y][node.x] === data.iaColor)\n        return h\n    return -h\n}\n\nconst verticalAlignment = (board, node) => {\n    var color = node.color\n    var pos = {x : node.x, y : node.y}\n    var neighbour1 = 1\n    while (pos.y > 0 && board[pos.y][pos.x] === color){\n        pos.y -= 1\n    }\n    if (pos.y > 0 && !board[pos.y][pos.x])\n        neighb\n}\n\nconst alignmentHeuristic = (board, node, data) => {\n    var h = 0\n    h += verticalAlignment(board, node)\n}\n\nconst getHeuristic = (node, data) => {\n    const start = window.performance.now()\n    var board = getBoard(node, data.board)\n    var h1 = 0\n    var h2 = 0\n    while (node.parent){\n        h1 += singleStoneHeuristic(board, node, data)\n        h2 += alignmentHeuristic(board, node)\n        node = node.parent\n    }\n    const end = window.performance.now()\n    data.heuristicTime += end - start\n    return h1 + h2\n}\n\nexport default getHeuristic"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,SAAS;AAElC,MAAMC,oBAAoB,GAAG,CAACC,KAAK,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAChD,IAAIC,CAAC,GAAG,EAAE;EACV,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIH,IAAI,CAACI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACL,KAAK,CAACC,IAAI,CAACI,CAAC,GAAG,CAAC,CAAC,CAACJ,IAAI,CAACK,CAAC,CAAC,EAC7CF,IAAI,IAAG,CAAC;EACZ,IAAIH,IAAI,CAACK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAACN,KAAK,CAACC,IAAI,CAACI,CAAC,CAAC,CAACJ,IAAI,CAACK,CAAC,GAAG,CAAC,CAAC,EAC7CF,IAAI,IAAG,CAAC;EACZ,IAAIH,IAAI,CAACI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAACL,KAAK,CAACC,IAAI,CAACI,CAAC,GAAG,CAAC,CAAC,CAACJ,IAAI,CAACK,CAAC,CAAC,EAC7CF,IAAI,IAAG,CAAC;EACZ,IAAIH,IAAI,CAACK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACN,KAAK,CAACC,IAAI,CAACI,CAAC,CAAC,CAACJ,IAAI,CAACK,CAAC,GAAG,CAAC,CAAC,EAC7CF,IAAI,IAAG,CAAC;EACZD,CAAC,GAAGA,CAAC,GAAGC,IAAI;EACZ,IAAIJ,KAAK,CAACC,IAAI,CAACI,CAAC,CAAC,CAACJ,IAAI,CAACK,CAAC,CAAC,KAAKJ,IAAI,CAACK,OAAO,EACtC,OAAOJ,CAAC;EACZ,OAAO,CAACA,CAAC;AACb,CAAC;AAED,MAAMK,iBAAiB,GAAG,CAACR,KAAK,EAAEC,IAAI,KAAK;EACvC,IAAIQ,KAAK,GAAGR,IAAI,CAACQ,KAAK;EACtB,IAAIC,GAAG,GAAG;IAACJ,CAAC,EAAGL,IAAI,CAACK,CAAC;IAAED,CAAC,EAAGJ,IAAI,CAACI;EAAC,CAAC;EAClC,IAAIM,UAAU,GAAG,CAAC;EAClB,OAAOD,GAAG,CAACL,CAAC,GAAG,CAAC,IAAIL,KAAK,CAACU,GAAG,CAACL,CAAC,CAAC,CAACK,GAAG,CAACJ,CAAC,CAAC,KAAKG,KAAK,EAAC;IAC9CC,GAAG,CAACL,CAAC,IAAI,CAAC;EACd;EACA,IAAIK,GAAG,CAACL,CAAC,GAAG,CAAC,IAAI,CAACL,KAAK,CAACU,GAAG,CAACL,CAAC,CAAC,CAACK,GAAG,CAACJ,CAAC,CAAC,EACjCM,MAAM;AACd,CAAC;AAED,MAAMC,kBAAkB,GAAG,CAACb,KAAK,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC9C,IAAIC,CAAC,GAAG,CAAC;EACTA,CAAC,IAAIK,iBAAiB,CAACR,KAAK,EAAEC,IAAI,CAAC;AACvC,CAAC;AAED,MAAMa,YAAY,GAAG,CAACb,IAAI,EAAEC,IAAI,KAAK;EACjC,MAAMa,KAAK,GAAGC,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE;EACtC,IAAIlB,KAAK,GAAGF,QAAQ,CAACG,IAAI,EAAEC,IAAI,CAACF,KAAK,CAAC;EACtC,IAAImB,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAG,CAAC;EACV,OAAOnB,IAAI,CAACoB,MAAM,EAAC;IACfF,EAAE,IAAIpB,oBAAoB,CAACC,KAAK,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAC7CkB,EAAE,IAAIP,kBAAkB,CAACb,KAAK,EAAEC,IAAI,CAAC;IACrCA,IAAI,GAAGA,IAAI,CAACoB,MAAM;EACtB;EACA,MAAMC,GAAG,GAAGN,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE;EACpChB,IAAI,CAACqB,aAAa,IAAID,GAAG,GAAGP,KAAK;EACjC,OAAOI,EAAE,GAAGC,EAAE;AAClB,CAAC;AAED,eAAeN,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}