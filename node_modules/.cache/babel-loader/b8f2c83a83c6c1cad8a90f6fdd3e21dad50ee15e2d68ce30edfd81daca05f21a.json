{"ast":null,"code":"var imagesLoaded = 0;\nconst loadImages = imagesToLoad => {\n  return new Promise((resolve, reject) => {\n    var images = [];\n    for (var c = 0; c < imagesToLoad.length; c++) {\n      images[c] = new Image();\n      images[c].src = imagesToLoad[c];\n      // eslint-disable-next-line\n      images[c].onload = () => {\n        imagesLoaded += 1;\n        if (imagesLoaded === imagesToLoad.length) resolve(images);\n      };\n    }\n  });\n};\nexport default loadImages;","map":{"version":3,"names":["imagesLoaded","loadImages","imagesToLoad","Promise","resolve","reject","images","c","length","Image","src","onload"],"sources":["/Users/adauchy/work/ft/gomokuGit/gomoku/src/tools/loadImages.js"],"sourcesContent":["var imagesLoaded = 0\n\nconst loadImages = (imagesToLoad) => {\n    return new Promise((resolve, reject) => {\n        var images = []\n        for (var c = 0; c < imagesToLoad.length; c++){\n            images[c] = new Image()\n            images[c].src = imagesToLoad[c]\n            // eslint-disable-next-line\n            images[c].onload = () => {\n                imagesLoaded += 1\n                if (imagesLoaded === imagesToLoad.length)\n                    resolve(images)\n            }\n        }\n    })\n}\n\nexport default loadImages"],"mappings":"AAAA,IAAIA,YAAY,GAAG,CAAC;AAEpB,MAAMC,UAAU,GAAIC,YAAY,IAAK;EACjC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACM,MAAM,EAAED,CAAC,EAAE,EAAC;MACzCD,MAAM,CAACC,CAAC,CAAC,GAAG,IAAIE,KAAK,EAAE;MACvBH,MAAM,CAACC,CAAC,CAAC,CAACG,GAAG,GAAGR,YAAY,CAACK,CAAC,CAAC;MAC/B;MACAD,MAAM,CAACC,CAAC,CAAC,CAACI,MAAM,GAAG,MAAM;QACrBX,YAAY,IAAI,CAAC;QACjB,IAAIA,YAAY,KAAKE,YAAY,CAACM,MAAM,EACpCJ,OAAO,CAACE,MAAM,CAAC;MACvB,CAAC;IACL;EACJ,CAAC,CAAC;AACN,CAAC;AAED,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}