{"ast":null,"code":"const inBoard = pos => {\n  if (pos.x >= 0 && pos.x < 19 && pos.y >= 0 && pos.y < 19) return true;\n  return false;\n};\nconst getColor = (board, pos) => {\n  return board[pos.y][pos.x];\n};\nconst possibleCapture = (data, x, y, color, ennemyColor, increment) => {\n  var pos;\n  for (var c = 0; c < 3; c += 1) {\n    pos = [{\n      x: x + increment[c][0] * 2,\n      y: y + increment[c][1] * 2\n    }, {\n      x: x + increment[c][0],\n      y: y + increment[c][1]\n    }, {\n      x,\n      y\n    }, {\n      x: x - increment[c][0],\n      y: y - increment[c][1]\n    }, {\n      x: x - increment[c][0] * 2,\n      y: y - increment[c][1] * 2\n    }];\n    if (inBoard(pos[0]) && getColor(data.board, pos[0]) === color && inBoard(pos[1]) && getColor(data.board, pos[1]) === ennemyColor && inBoard(pos[3]) && getColor(data.board, pos[3]) === 0) data.forcedMoves.push(pos[3]);\n    if (inBoard(pos[1]) && getColor(data.board, pos[1]) === color && inBoard(pos[3]) && getColor(data.board, pos[3]) === ennemyColor && inBoard(pos[4]) && getColor(data.board, pos[4]) === 0) data.forcedMoves.push(pos[4]);\n    if (inBoard(pos[1]) && getColor(data.board, pos[1]) === 0 && inBoard(pos[3]) && getColor(data.board, pos[3]) === ennemyColor && inBoard(pos[4]) && getColor(data.board, pos[4]) === color) data.forcedMoves.push(pos[1]);\n    if (inBoard(pos[0]) && getColor(data.board, pos[0]) === 0 && inBoard(pos[1]) && getColor(data.board, pos[1]) === ennemyColor && inBoard(pos[3]) && getColor(data.board, pos[3]) === color) data.forcedMoves.push(pos[0]);\n  }\n  if (data.forcedMoves.length) return true;\n  return false;\n};\nconst checkPossibleCaptures = (data, x, y, ennemyColor, color, captureIncrement, sizeAlignment, xIncrement, yIncrement) => {\n  var forcedMoves = [];\n  var sizeMaxAlignment = 0;\n  var count = 0;\n  for (var c = 0; c < sizeAlignment; c += 1) {\n    if (possibleCapture(data, x, y, ennemyColor, color, captureIncrement)) {\n      if (count > sizeMaxAlignment) sizeMaxAlignment = count;\n      count = 0;\n    }\n    x += xIncrement;\n    y += yIncrement;\n  }\n};\nconst checkAlignment = (x, y, data, xIncrement, yIncrement, captureIncrement) => {\n  var sizeAlignment = 0;\n  var color = data.board[y][x];\n  var ennemyColor;\n  var saveX;\n  var saveY;\n  var forcedMoves = [];\n  saveX = x;\n  saveY = y;\n  if (color == data.BLACK) ennemyColor = data.WHITE;else ennemyColor = data.BLACK;\n  while (x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === color && !possibleCapture(data, x, y, ennemyColor, color, captureIncrement)) {\n    sizeAlignment += 1;\n    x += xIncrement;\n    y += yIncrement;\n  }\n  if (sizeAlignment >= 5) {\n    forcedMoves = checkPossibleCaptures(data, saveX, saveY, ennemyColor, color, captureIncrement, sizeAlignment);\n    if (data.forcedMoves.length) {\n      data.forcedMoves.push(forcedMoves);\n      return false;\n    }\n    return color;\n  }\n  return false;\n};\nconst checkAlignments = (x, y, data) => {\n  var winner;\n  if ((winner = checkAlignment(x, y, data, 0, 1, [[-1, 0], [-1, -1], [-1, 1]])) || (winner = checkAlignment(x, y, data, 1, 0, [[0, -1], [-1, -1], [1, -1]])) || (winner = checkAlignment(x, y, data, 1, 1, [[-1, 1], [-1, 0], [0, 1]])) || (winner = checkAlignment(x, y, data, -1, 1, [[-1, -1], [0, -1], [-1, 0]]))) return winner;\n  return false;\n};\nconst checkBoard = data => {\n  var winner;\n  data.forcedMoves = [];\n  for (var y = 0; y < 19; y++) {\n    for (var x = 0; x < 19; x++) {\n      if (data.board[y][x] && (winner = checkAlignments(x, y, data))) return winner;\n    }\n  }\n  return false;\n};\nconst checkEndGame = data => {\n  if (data.piecesOnBoard === 361) return data.DRAW;\n  if (data.captures.white >= 10) return data.WHITE;\n  if (data.captures.black >= 10) return data.BLACK;\n  return checkBoard(data);\n};\nexport default checkEndGame;","map":{"version":3,"names":["inBoard","pos","x","y","getColor","board","possibleCapture","data","color","ennemyColor","increment","c","forcedMoves","push","length","checkPossibleCaptures","captureIncrement","sizeAlignment","xIncrement","yIncrement","sizeMaxAlignment","count","checkAlignment","saveX","saveY","BLACK","WHITE","checkAlignments","winner","checkBoard","checkEndGame","piecesOnBoard","DRAW","captures","white","black"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/tools/checkEndGame.js"],"sourcesContent":["const inBoard = pos => {\n\tif (pos.x >= 0 && pos.x < 19 && pos.y >= 0 && pos.y < 19)\n\t\treturn true\n\treturn false\n}\n\nconst getColor = (board, pos) => {\n\treturn board[pos.y][pos.x]\n}\n\nconst possibleCapture = (data, x, y, color, ennemyColor, increment) => {\n\tvar pos\n\tfor (var c = 0; c < 3; c += 1){\n\t\tpos = [\n\t\t\t{x : x + increment[c][0] * 2, y : y + increment[c][1] * 2},\n\t\t\t{x : x + increment[c][0], y : y + increment[c][1]},\n\t\t\t{x, y},\n\t\t\t{x : x - increment[c][0], y : y - increment[c][1]},\n\t\t\t{x : x - increment[c][0] * 2, y : y - increment[c][1] * 2}\n\t\t]\n\t\tif (inBoard(pos[0]) && getColor(data.board, pos[0]) === color &&\n\t\tinBoard(pos[1]) && getColor(data.board, pos[1]) === ennemyColor &&\n\t\tinBoard(pos[3]) && getColor(data.board, pos[3]) === 0)\n\t\t\tdata.forcedMoves.push(pos[3])\n\t\tif (inBoard(pos[1]) && getColor(data.board, pos[1]) === color &&\n\t\tinBoard(pos[3]) && getColor(data.board, pos[3]) === ennemyColor &&\n\t\tinBoard(pos[4]) && getColor(data.board, pos[4]) === 0)\n\t\t\tdata.forcedMoves.push(pos[4])\n\t\tif (inBoard(pos[1]) && getColor(data.board, pos[1]) === 0 &&\n\t\tinBoard(pos[3]) && getColor(data.board, pos[3]) === ennemyColor &&\n\t\tinBoard(pos[4]) && getColor(data.board, pos[4]) === color)\n\t\t\tdata.forcedMoves.push(pos[1])\n\t\tif (inBoard(pos[0]) && getColor(data.board, pos[0]) === 0 &&\n\t\tinBoard(pos[1]) && getColor(data.board, pos[1]) === ennemyColor &&\n\t\tinBoard(pos[3]) && getColor(data.board, pos[3]) === color)\n\t\t\tdata.forcedMoves.push(pos[0])\n\t}\n\tif (data.forcedMoves.length)\n\t\treturn true\n\treturn false\n}\n\nconst checkPossibleCaptures = (data, x, y, ennemyColor, color, captureIncrement,\nsizeAlignment, xIncrement, yIncrement) => {\n\tvar forcedMoves = []\n\tvar sizeMaxAlignment = 0\n\tvar count = 0\n\tfor (var c = 0; c < sizeAlignment; c += 1){\n\t\tif (possibleCapture(data, x, y, ennemyColor, color, captureIncrement)){\n\t\t\tif (count > sizeMaxAlignment)\n\t\t\t\tsizeMaxAlignment = count\n\t\t\tcount = 0\n\t\t}\n\t\tx += xIncrement\n\t\ty += yIncrement\n\t}\n}\n\nconst checkAlignment = (x, y, data, xIncrement, yIncrement, captureIncrement) => {\n\tvar sizeAlignment = 0\n\tvar color = data.board[y][x]\n\tvar ennemyColor\n\tvar saveX\n\tvar saveY\n\tvar forcedMoves = []\n\tsaveX = x\n\tsaveY = y\n\tif (color == data.BLACK)\n\t\tennemyColor = data.WHITE\n\telse\n\t\tennemyColor = data.BLACK\n\twhile (x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === color\n\t\t&& !possibleCapture(data, x, y, ennemyColor, color, captureIncrement)){\n\t\tsizeAlignment += 1;\n\t\tx += xIncrement\n\t\ty += yIncrement\n\t}\n\tif (sizeAlignment >= 5)\n\t{\n\t\tforcedMoves = checkPossibleCaptures(data, saveX, saveY, ennemyColor,\n\t\tcolor, captureIncrement, sizeAlignment)\n\t\tif (data.forcedMoves.length){\n\t\t\tdata.forcedMoves.push(forcedMoves)\n\t\t\treturn false\n\t\t}\n\t\treturn color\n\t}\n\treturn false\n}\n\nconst checkAlignments = (x, y, data) => {\n    var winner\n    if (\n        (winner = checkAlignment(x, y, data, 0, 1, [[-1, 0], [-1, -1], [-1, 1]])) ||\n        (winner = checkAlignment(x, y, data, 1, 0, [[0, -1], [-1, -1], [1, -1]])) ||\n        (winner = checkAlignment(x, y, data, 1, 1, [[-1, 1], [-1, 0], [0, 1]])) ||\n        (winner = checkAlignment(x, y, data, -1, 1, [[-1, -1], [0, -1], [-1, 0]]))\n    )\n        return winner\n    return false\n}\n\nconst checkBoard = data => {\n    var winner\n\tdata.forcedMoves = []\n    for (var y = 0; y < 19; y++){\n        for (var x = 0; x < 19; x++){\n            if (data.board[y][x] && (winner = checkAlignments(x, y, data)))\n                return winner;\n        }\n    }\n\treturn false\n}\n\nconst checkEndGame = (data) => {\n    if (data.piecesOnBoard === 361)\n        return data.DRAW\n\tif (data.captures.white >= 10)\n\t\treturn data.WHITE\n\tif (data.captures.black >= 10)\n\t\treturn data.BLACK\n\treturn checkBoard(data)\n}\n\nexport default checkEndGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}