{"ast":null,"code":"const getPos = (x, y, c) => {\n  return [{\n    x: x - (c + 1),\n    y: y - (c + 1)\n  }, {\n    x: x + (c + 1),\n    y: y - (c + 1)\n  }, {\n    x: x + (c + 1),\n    y: y + (c + 1)\n  }, {\n    x: x - (c + 1),\n    y: y + (c + 1)\n  }];\n};\nconst checkAround = () => {};\nconst blockCase = (x, y, board, offset) => {\n  var pos;\n  for (var c = 0; c < offset; c++) {\n    pos = getPos(x, y, c);\n    for (var i = 0; i < 3 + c * 2 - 1; i++) {\n      pos[0].x++;\n      pos[1].y++;\n      pos[2].x--;\n      pos[3].y--;\n    }\n  }\n  return true;\n};\nconst blockBoard = (board, offset) => {\n  for (var y = 0; y < 19; y++) {\n    for (var x = 0; x < 19; x++) {\n      if (!board[y][x] && blockCase(x, y, board, offset)) board[y][x] = 9;\n    }\n  }\n};\nconst isEmpty = board => {\n  for (var y = 0; y < 19; y++) {\n    for (var x = 0; x < 19; x++) {\n      if (board[y][x] === 9) return false;\n    }\n  }\n  return true;\n};\nconst getBlockedBoard = (board, offset) => {\n  var res = [];\n  for (var y = 0; y < 19; y++) {\n    res[y] = [];\n    for (var x = 0; x < 19; x++) {\n      res[y][x] = board[y][x];\n    }\n  }\n  blockBoard(res, offset);\n  return res;\n};\nconst getBlockedBoards = board => {\n  var blockedBoards = [];\n  var blockedBoard;\n  var offset = 1;\n  while (true) {\n    blockedBoard = getBlockedBoard(board, offset);\n    blockedBoards.push(blockedBoard);\n    if (isEmpty(blockedBoard)) return blockedBoards;\n    offset += 1;\n  }\n};\nconst noStonesOnTheBoard = board => {\n  for (var y = 0; y < 19; y++) {\n    for (var x = 0; x < 19; x++) {\n      if (board[y][x]) return false;\n    }\n  }\n  return true;\n};\nconst getIaPath = (board, treatmentSpace) => {\n  var iaPath = [];\n  if (noStonesOnTheBoard(board)) return [{\n    x: 9,\n    y: 9\n  }];\n  var blockedBoards = getBlockedBoards(board);\n  for (var c = 0; c < treatmentSpace && c < blockedBoards.length; c++) {\n    for (var y = 0; y < 19; y++) {\n      for (var x = 0; x < 19; x++) {\n        if (!blockedBoards[c][y][x]) {\n          iaPath.push({\n            x,\n            y\n          });\n          for (var i = c + 1; i < blockedBoards.length; i++) {\n            blockedBoards[i][y][x] = 9;\n          }\n        }\n      }\n    }\n  }\n  return iaPath;\n};\nexport default getIaPath;","map":{"version":3,"names":["getPos","x","y","c","checkAround","blockCase","board","offset","pos","i","blockBoard","isEmpty","getBlockedBoard","res","getBlockedBoards","blockedBoards","blockedBoard","push","noStonesOnTheBoard","getIaPath","treatmentSpace","iaPath","length"],"sources":["/Users/adauchy/work/ft/myGomokuGit/gomoku/src/tools/ia/getIaPath.js"],"sourcesContent":["const getPos = (x, y, c) => {\n    return [\n        {x : x - (c + 1), y : y - (c + 1)},\n        {x : x + (c + 1), y : y - (c + 1)},\n        {x : x + (c + 1), y : y + (c + 1)},\n        {x : x - (c + 1), y : y + (c + 1)}\n    ]\n}\n\nconst checkAround = () => {\n\n}\n\nconst blockCase = (x, y, board, offset) => {\n    var pos\n    for (var c = 0; c < offset; c++){\n        pos = getPos(x, y, c)\n        for (var i = 0; i < 3 + c * 2 - 1; i++){\n            \n            pos[0].x++\n            pos[1].y++\n            pos[2].x--\n            pos[3].y--\n            \n        }\n    }\n    return true\n}\n\nconst blockBoard = (board, offset) => {\n    for (var y = 0; y < 19; y++){\n        for (var x = 0; x < 19; x++){\n            if (!board[y][x] && blockCase(x, y, board, offset))\n                board[y][x] = 9\n        }\n    }\n}\n\nconst isEmpty = board => {\n    for (var y = 0; y < 19; y++){\n        for (var x = 0; x < 19; x++){\n            if (board[y][x] === 9)\n                return false\n        }\n    }\n    return true\n}\n\nconst getBlockedBoard = (board, offset) => {\n    var res = []\n    for (var y = 0; y < 19; y++){\n        res[y] = []\n        for (var x = 0; x < 19; x++){\n            res[y][x] = board[y][x]\n        }\n    }\n    blockBoard(res, offset)\n    return res\n}\n\nconst getBlockedBoards = board => {\n    var blockedBoards = []\n    var blockedBoard\n    var offset = 1\n    while (true){\n        blockedBoard = getBlockedBoard(board, offset)\n        blockedBoards.push(blockedBoard)\n        if (isEmpty(blockedBoard))\n            return blockedBoards\n        offset += 1\n    }\n}\n\nconst noStonesOnTheBoard = board => {\n    for (var y = 0; y < 19; y++){\n        for (var x = 0; x < 19; x++){\n            if (board[y][x])\n                return false\n        }\n    }\n    return true\n}\n\n\nconst getIaPath = (board, treatmentSpace) => {\n    var iaPath = []\n    if (noStonesOnTheBoard(board))\n        return ([{x : 9, y : 9}])\n    var blockedBoards = getBlockedBoards(board)\n    for (var c = 0; c < treatmentSpace && c < blockedBoards.length; c++){\n        for (var y = 0; y < 19; y++){\n            for(var x = 0; x < 19; x++){\n                if (!blockedBoards[c][y][x]){\n                    iaPath.push({x, y})\n                    for (var i = c + 1; i < blockedBoards.length; i++){\n                        blockedBoards[i][y][x] = 9\n                    }\n                }\n            }\n        }\n    }\n    return iaPath\n}\n\nexport default getIaPath"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}