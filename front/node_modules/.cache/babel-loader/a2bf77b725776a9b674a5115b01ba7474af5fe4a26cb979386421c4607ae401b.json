{"ast":null,"code":"const printBackground = (data, images) => {\n  data.ctx.fillStyle = '#a6683e';\n  data.ctx.fillRect(0, 0, data.canvas.width, data.canvas.height);\n  for (var y = 0; y < 18; y++) {\n    for (var x = 0; x < 18; x++) data.ctx.drawImage(images.gomokuBoard, x * images.gomokuBoard.width + images.blackPiece.width / 2, y * images.gomokuBoard.height + images.blackPiece.width / 2);\n  }\n};\nconst initBoard = () => {\n  var board = [];\n  for (var y = 0; y < 19; y++) {\n    board[y] = [];\n    for (var x = 0; x < 19; x++) {\n      board[y][x] = 0;\n    }\n  }\n  return board;\n};\nconst printStones = (data, images) => {\n  for (var y = 0; y < 19; y++) {\n    for (var x = 0; x < 19; x++) {\n      if (data.board[y][x] === 'black' || data.board[y][x] === 'white') data.ctx.drawImage(data.board[y][x] === 'b' ? images.whitePiece : images.blackPiece);\n    }\n  }\n};\nconst printBoard = (data, images) => {\n  printBackground(data, images);\n  printStones(data, images);\n};\nconst initGame = (images, playerColor) => {\n  var data = {};\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  printGame(data, images);\n  data.canvas.onmousemove = e => {\n    var canvasOffsetWidth = data.canvas.offsetWidth;\n    var canvasOffsetHeight = data.canvas.offsetHeight;\n    var widthSquare = canvasOffsetWidth / 19;\n    var heightSquare = canvasOffsetHeight / 19;\n    printBoard(data, images);\n    var stoneX = Math.floor(e.offsetX / widthSquare) * widthSquare * (data.canvas.width / canvasOffsetWidth) + data.canvas.width / 19 / 2 - images.blackPiece.width / 2;\n    var stoneY = Math.floor(e.offsetY / heightSquare) * heightSquare * (data.canvas.height / canvasOffsetHeight) + data.canvas.height / 19 / 2 - images.blackPiece.height / 2;\n    console.log(stoneX, stoneY);\n    data.ctx.drawImage(playerColor === 'white' ? images.whitePiece : images.blackPiece, stoneX, stoneY);\n  };\n  data.canvas.onclick = e => {\n    var canvasOffsetWidth = data.canvas.offsetWidth;\n    var canvasOffsetHeight = data.canvas.offsetHeight;\n    var widthSquare = canvasOffsetWidth / 19;\n    var heightSquare = canvasOffsetHeight / 19;\n    var stoneX = Math.floor(e.offsetX / widthSquare) * widthSquare * (data.canvas.width / canvasOffsetWidth) + data.canvas.width / 19 / 2 - images.blackPiece.width / 2;\n    var stoneY = Math.floor(e.offsetY / heightSquare) * heightSquare * (data.canvas.height / canvasOffsetHeight) + data.canvas.height / 19 / 2 - images.blackPiece.height / 2;\n    console.log(stoneX, stoneY);\n    data.ctx.drawImage(playerColor === 'white' ? images.whitePiece : images.blackPiece, stoneX, stoneY);\n  };\n  data.canvas.onmouseleave = () => {\n    printBackground(data, images);\n  };\n};\nexport default initGame;","map":{"version":3,"names":["printBackground","data","images","ctx","fillStyle","fillRect","canvas","width","height","y","x","drawImage","gomokuBoard","blackPiece","initBoard","board","printStones","whitePiece","printBoard","initGame","playerColor","document","getElementById","getContext","printGame","onmousemove","e","canvasOffsetWidth","offsetWidth","canvasOffsetHeight","offsetHeight","widthSquare","heightSquare","stoneX","Math","floor","offsetX","stoneY","offsetY","console","log","onclick","onmouseleave"],"sources":["/Users/adauchy/work/ft/gomokuGit/gomoku/src/pages/humanvsia/initGame.js"],"sourcesContent":["const printBackground = (data, images) => {\n    data.ctx.fillStyle = '#a6683e'\n    data.ctx.fillRect(0, 0, data.canvas.width, data.canvas.height)\n    for (var y = 0; y < 18; y++){\n        for (var x = 0; x < 18; x++)\n            data.ctx.drawImage(\n                images.gomokuBoard,\n                x * images.gomokuBoard.width + images.blackPiece.width / 2,\n                y * images.gomokuBoard.height + images.blackPiece.width / 2\n            )\n    }\n}\n\nconst initBoard = () => {\n    var board = []\n    for (var y = 0; y < 19; y++){\n        board[y] = []\n        for (var x = 0; x < 19; x++){\n            board[y][x] = 0\n        }\n    }\n    return board\n}\n\nconst printStones = (data, images) => {\n    for (var y = 0; y < 19; y++){\n        for (var x = 0; x < 19; x++){\n            if (data.board[y][x] === 'black' || data.board[y][x] === 'white')\n                data.ctx.drawImage(\n                    data.board[y][x] === 'b' ? images.whitePiece : images.blackPiece,\n                )\n        }\n    }\n}\n\nconst printBoard = (data, images) => {\n    printBackground(data, images)\n    printStones(data, images)\n}\n\nconst initGame = (images, playerColor) => {\n    var data = {}\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n    printGame(data, images)\n    data.canvas.onmousemove = e => {\n        var canvasOffsetWidth = data.canvas.offsetWidth\n        var canvasOffsetHeight = data.canvas.offsetHeight\n        var widthSquare = canvasOffsetWidth / 19\n        var heightSquare = canvasOffsetHeight / 19\n        printBoard(data, images)\n        var stoneX = (\n            (Math.floor(e.offsetX / widthSquare) * widthSquare) *\n            (data.canvas.width / canvasOffsetWidth) +\n            (data.canvas.width / 19) / 2 - images.blackPiece.width / 2\n        )\n        var stoneY = (\n            (Math.floor(e.offsetY / heightSquare) * heightSquare) *\n            (data.canvas.height / canvasOffsetHeight) +\n            (data.canvas.height / 19) / 2 - images.blackPiece.height / 2\n        )\n        console.log(stoneX, stoneY)\n        data.ctx.drawImage(playerColor === 'white' ? images.whitePiece : images.blackPiece, stoneX, stoneY)\n    }\n    data.canvas.onclick = e => {\n        var canvasOffsetWidth = data.canvas.offsetWidth\n        var canvasOffsetHeight = data.canvas.offsetHeight\n        var widthSquare = canvasOffsetWidth / 19\n        var heightSquare = canvasOffsetHeight / 19\n        var stoneX = (\n            (Math.floor(e.offsetX / widthSquare) * widthSquare) *\n            (data.canvas.width / canvasOffsetWidth) +\n            (data.canvas.width / 19) / 2 - images.blackPiece.width / 2\n        )\n        var stoneY = (\n            (Math.floor(e.offsetY / heightSquare) * heightSquare) *\n            (data.canvas.height / canvasOffsetHeight) +\n            (data.canvas.height / 19) / 2 - images.blackPiece.height / 2\n        )\n        console.log(stoneX, stoneY)\n        data.ctx.drawImage(playerColor === 'white' ? images.whitePiece : images.blackPiece, stoneX, stoneY)\n    }\n    data.canvas.onmouseleave = () => {\n        printBackground(data, images)\n    }\n}\n\nexport default initGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}