{"ast":null,"code":"var _jsxFileName = \"/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/pages/humanVsHuman/humanVsHuman.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Header from '../../tools/header.js';\nimport Footer from '../../tools/footer.js';\nimport styles from './humanVsHuman.module.css';\nimport initGame from './initGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirstPlayerColor = _ref => {\n  let {\n    setFirstPlayerColor,\n    images\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.settingsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'whitesmoke'\n        },\n        children: \"First player's color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#a6683e'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"black\",\n          className: styles.colorButton,\n          onClick: () => setFirstPlayerColor(2),\n          src: images.blackPiece.src\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"white\",\n          className: styles.colorButton,\n          onClick: () => setFirstPlayerColor(1),\n          src: images.whitePiece.src\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = FirstPlayerColor;\nconst Canvas = _ref2 => {\n  let {\n    images\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\",\n    width: `${images.gomokuBoard.width * 18 + images.blackPiece.width}`,\n    height: `${images.gomokuBoard.height * 18 + images.blackPiece.height}`,\n    className: styles.canvas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Canvas;\nconst Infos = _ref3 => {\n  let {\n    images\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.infos,\n    children: [/*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Captures, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      color: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(EndGame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Infos;\nconst Board = _ref4 => {\n  let {\n    images\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.canvasContainer,\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Infos, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_c4 = Board;\nconst Game = _ref5 => {\n  _s();\n  let {\n    images\n  } = _ref5;\n  const [firstPlayerColor, setFirstPlayerColor] = useState(false);\n  useEffect(() => {\n    if (firstPlayerColor) initGame(images, firstPlayerColor);\n  });\n  if (!firstPlayerColor) return /*#__PURE__*/_jsxDEV(FirstPlayerColor, {\n    setFirstPlayerColor: setFirstPlayerColor,\n    images: images\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Board, {\n    images: images\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n};\n_s(Game, \"dq+rSvwGI7//y0IH9ir4ba9vKmA=\");\n_c5 = Game;\nconst HumanVsHuman = _ref6 => {\n  let {\n    images\n  } = _ref6;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_c6 = HumanVsHuman;\nexport default HumanVsHuman;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"FirstPlayerColor\");\n$RefreshReg$(_c2, \"Canvas\");\n$RefreshReg$(_c3, \"Infos\");\n$RefreshReg$(_c4, \"Board\");\n$RefreshReg$(_c5, \"Game\");\n$RefreshReg$(_c6, \"HumanVsHuman\");","map":{"version":3,"names":["useEffect","useState","Header","Footer","styles","initGame","FirstPlayerColor","setFirstPlayerColor","images","settingsContainer","color","backgroundColor","colorButton","blackPiece","src","whitePiece","Canvas","gomokuBoard","width","height","canvas","Infos","infos","Board","canvasContainer","Game","firstPlayerColor","HumanVsHuman"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/pages/humanVsHuman/humanVsHuman.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport Header from '../../tools/header.js'\nimport Footer from '../../tools/footer.js'\nimport styles from './humanVsHuman.module.css'\nimport initGame from './initGame'\n\nconst FirstPlayerColor = ({setFirstPlayerColor, images}) => {\n    return (\n        <div>\n            <div className={styles.settingsContainer}>\n                <h1 style={{color:'whitesmoke'}}>First player's color</h1>\n                <div style={{backgroundColor:'#a6683e'}}>\n                    <img alt='black' className={styles.colorButton} onClick={() => setFirstPlayerColor(2)} src={images.blackPiece.src}/>\n                    <img alt='white' className={styles.colorButton} onClick={() => setFirstPlayerColor(1)} src={images.whitePiece.src}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst Canvas = ({images}) => {\n    return (\n        <canvas\n            id='canvas'\n            width={`${images.gomokuBoard.width * 18 + images.blackPiece.width}`}\n            height={`${images.gomokuBoard.height * 18 + images.blackPiece.height}`}\n            className={styles.canvas}>\n        </canvas>\n    )\n}\n\n\n\nconst Infos = ({images}) => {\n    return (\n        <div className={styles.infos}>\n            <Timer/>\n            <hr color='white'/>\n\t\t\t<Captures images={images}/>\n\t\t\t<hr color='white'/>\n\t\t\t<EndGame/>\n        </div>\n    )\n}\n\nconst Board = ({images}) => {\n    return (\n        <div className={styles.canvasContainer}>\n            <Canvas images={images}/>\n\t\t\t<Infos images={images}/>\n        </div>\n    )\n}\n\nconst Game = ({images}) => {\n    const [firstPlayerColor, setFirstPlayerColor] = useState(false)\n\n    useEffect(() => {\n        if (firstPlayerColor)\n            initGame(images, firstPlayerColor)\n    })\n\n    if (!firstPlayerColor)\n        return <FirstPlayerColor setFirstPlayerColor={setFirstPlayerColor} images={images}/>\n    return <Board images={images}/>\n}\n\nconst HumanVsHuman = ({images}) => {\n    return (\n        <div>\n            <Header/>\n            <Game images={images}/>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default HumanVsHuman"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAEjC,MAAMC,gBAAgB,GAAG,QAAmC;EAAA,IAAlC;IAACC,mBAAmB;IAAEC;EAAM,CAAC;EACnD,oBACI;IAAA,uBACI;MAAK,SAAS,EAAEJ,MAAM,CAACK,iBAAkB;MAAA,wBACrC;QAAI,KAAK,EAAE;UAACC,KAAK,EAAC;QAAY,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAC1D;QAAK,KAAK,EAAE;UAACC,eAAe,EAAC;QAAS,CAAE;QAAA,wBACpC;UAAK,GAAG,EAAC,OAAO;UAAC,SAAS,EAAEP,MAAM,CAACQ,WAAY;UAAC,OAAO,EAAE,MAAML,mBAAmB,CAAC,CAAC,CAAE;UAAC,GAAG,EAAEC,MAAM,CAACK,UAAU,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAE,eACpH;UAAK,GAAG,EAAC,OAAO;UAAC,SAAS,EAAEV,MAAM,CAACQ,WAAY;UAAC,OAAO,EAAE,MAAML,mBAAmB,CAAC,CAAC,CAAE;UAAC,GAAG,EAAEC,MAAM,CAACO,UAAU,CAACD;QAAI;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAClH;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KAZKR,gBAAgB;AActB,MAAMU,MAAM,GAAG,SAAc;EAAA,IAAb;IAACR;EAAM,CAAC;EACpB,oBACI;IACI,EAAE,EAAC,QAAQ;IACX,KAAK,EAAG,GAAEA,MAAM,CAACS,WAAW,CAACC,KAAK,GAAG,EAAE,GAAGV,MAAM,CAACK,UAAU,CAACK,KAAM,EAAE;IACpE,MAAM,EAAG,GAAEV,MAAM,CAACS,WAAW,CAACE,MAAM,GAAG,EAAE,GAAGX,MAAM,CAACK,UAAU,CAACM,MAAO,EAAE;IACvE,SAAS,EAAEf,MAAM,CAACgB;EAAO;IAAA;IAAA;IAAA;EAAA,QACpB;AAEjB,CAAC;AAAA,MATKJ,MAAM;AAaZ,MAAMK,KAAK,GAAG,SAAc;EAAA,IAAb;IAACb;EAAM,CAAC;EACnB,oBACI;IAAK,SAAS,EAAEJ,MAAM,CAACkB,KAAM;IAAA,wBACzB,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eACR;MAAI,KAAK,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5B,QAAC,QAAQ;MAAC,MAAM,EAAEd;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3B;MAAI,KAAK,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACnB,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAA,MAVKa,KAAK;AAYX,MAAME,KAAK,GAAG,SAAc;EAAA,IAAb;IAACf;EAAM,CAAC;EACnB,oBACI;IAAK,SAAS,EAAEJ,MAAM,CAACoB,eAAgB;IAAA,wBACnC,QAAC,MAAM;MAAC,MAAM,EAAEhB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAClC,QAAC,KAAK;MAAC,MAAM,EAAEA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEd,CAAC;AAAA,MAPKe,KAAK;AASX,MAAME,IAAI,GAAG,SAAc;EAAA;EAAA,IAAb;IAACjB;EAAM,CAAC;EAClB,MAAM,CAACkB,gBAAgB,EAAEnB,mBAAmB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACZ,IAAI0B,gBAAgB,EAChBrB,QAAQ,CAACG,MAAM,EAAEkB,gBAAgB,CAAC;EAC1C,CAAC,CAAC;EAEF,IAAI,CAACA,gBAAgB,EACjB,oBAAO,QAAC,gBAAgB;IAAC,mBAAmB,EAAEnB,mBAAoB;IAAC,MAAM,EAAEC;EAAO;IAAA;IAAA;IAAA;EAAA,QAAE;EACxF,oBAAO,QAAC,KAAK;IAAC,MAAM,EAAEA;EAAO;IAAA;IAAA;IAAA;EAAA,QAAE;AACnC,CAAC;AAAA,GAXKiB,IAAI;AAAA,MAAJA,IAAI;AAaV,MAAME,YAAY,GAAG,SAAc;EAAA,IAAb;IAACnB;EAAM,CAAC;EAC1B,oBACI;IAAA,wBACI,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT,QAAC,IAAI;MAAC,MAAM,EAAEA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACvB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,MARKmB,YAAY;AAUlB,eAAeA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}