{"ast":null,"code":"import { checkEndGame } from '../../tools/checkEndGame';\nimport printBoard from '../../tools/printBoard';\nimport { getStonePosition, initBoard, serverIp } from '../../tools/tools';\nimport { io } from \"socket.io-client\";\nconst canvasOnMouseMove = (e, data) => {\n  if (data.endGame || data.turn === 'ai') return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (stone.y === 19) return;\n  if (!data.board[stone.y][stone.x]) {\n    printBoard(data);\n    data.ctx.globalAlpha = 0.5;\n    data.ctx.drawImage(data.playerColor === data.WHITE ? data.images.whitePiece : data.images.blackPiece, data.images.gomokuBoard.width * stone.x, data.images.gomokuBoard.height * stone.y);\n    data.ctx.globalAlpha = 1;\n  } else printBoard(data);\n};\nconst printEndGameStatus = data => {\n  var params = {};\n  params[data.DRAW] = {\n    text: 'END OF GAME, NO WINNER',\n    color: 'orange'\n  };\n  params[data.playerColor] = {\n    text: 'YOU WON THE GAME !',\n    color: 'green'\n  };\n  params[data.aiColor] = {\n    text: 'YOU LOST THE GAME',\n    color: 'red'\n  };\n  document.getElementById('endGame').style.color = params[data.endGame].color;\n  document.getElementById('endGame').innerHTML = params[data.endGame].text;\n  document.getElementById('newGame').style.display = 'block';\n};\nconst setEndGame = data => {\n  printEndGameStatus(data);\n  data.socket.disconnect();\n};\nconst launchAi = data => {\n  data.startAi = window.performance.now();\n  data.aiLaunched = true;\n  data.socket.emit('ai', {\n    aiColor: data.aiColor,\n    board: data.board\n  });\n};\nconst receiveAiMove = (data, pos) => {\n  const timeAi = Math.floor(window.performance.now() - data.startAi);\n  data.board[pos.y][pos.x] = data.playerColor === data.BLACK ? data.WHITE : data.BLACK;\n  data.piecesOnBoard += 1;\n  var nbSeconds = Math.floor(timeAi / 1000) % 1000;\n  var nbMilliSeconds = `${timeAi % 1000}`.padStart(3, '0');\n  data.aiMoves += 1;\n  data.aiTotalTime += parseFloat(`${nbSeconds}.${nbMilliSeconds}`);\n  document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`;\n  document.getElementById('timerAverage').innerHTML = `${(data.aiTotalTime / data.aiMoves).toFixed(3)}s`;\n  launch;\n  printBoard(data);\n  if (data.endGame = checkEndGame(data)) {\n    setEndGame(data);\n    return;\n  }\n  data.turn = 'human';\n  data.aiLaunched = false;\n};\nconst canvasOnClick = (e, data) => {\n  if (data.endGame || data.turn === 'ai') return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (!data.board[stone.y][stone.x]) {\n    data.board[stone.y][stone.x] = data.playerColor;\n    data.piecesOnBoard += 1;\n    printBoard(data);\n    if (data.endGame = checkEndGame(data)) {\n      setEndGame(data);\n      return;\n    }\n    data.turn = 'ai';\n    launchAi(data, data.images, data.playerColor);\n  }\n};\nconst canvasOnMouseLeave = (e, data) => {\n  if (data.endGame || data.turn === 'ai') return;\n  printBoard(data);\n};\nconst initGame = (images, playerColor, firstPlayer) => {\n  // test()\n  var data = {};\n  data.socket = io(serverIp, {\n    query: {\n      page: 'human vs ai'\n    }\n  });\n  data.aiLaunched = false;\n  data.WHITE = 1;\n  data.BLACK = 2;\n  data.DRAW = 3;\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  data.turn = firstPlayer;\n  data.aiMoves = 0;\n  data.aiTotalTime = 0;\n  data.piecesOnBoard = 0;\n  data.playerColor = playerColor;\n  data.aiColor = playerColor === data.WHITE ? data.BLACK : data.WHITE;\n  data.images = images;\n  printBoard(data);\n  data.socket.on('ai', pos => {\n    receiveAiMove(data, pos);\n  });\n  if (data.turn === 'ai') launchAi(data);\n  data.canvas.onmousemove = e => canvasOnMouseMove(e, data);\n  data.canvas.onclick = e => canvasOnClick(e, data);\n  data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data);\n};\nexport default initGame;","map":{"version":3,"names":["checkEndGame","printBoard","getStonePosition","initBoard","serverIp","io","canvasOnMouseMove","e","data","endGame","turn","canvasOffsetWidth","canvas","offsetWidth","canvasOffsetHeight","offsetHeight","stone","y","board","x","ctx","globalAlpha","drawImage","playerColor","WHITE","images","whitePiece","blackPiece","gomokuBoard","width","height","printEndGameStatus","params","DRAW","text","color","aiColor","document","getElementById","style","innerHTML","display","setEndGame","socket","disconnect","launchAi","startAi","window","performance","now","aiLaunched","emit","receiveAiMove","pos","timeAi","Math","floor","BLACK","piecesOnBoard","nbSeconds","nbMilliSeconds","padStart","aiMoves","aiTotalTime","parseFloat","toFixed","launch","canvasOnClick","canvasOnMouseLeave","initGame","firstPlayer","query","page","getContext","on","onmousemove","onclick","onmouseleave"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/pages/humanVsAi/initGame.js"],"sourcesContent":["import { checkEndGame } from '../../tools/checkEndGame'\nimport printBoard from '../../tools/printBoard'\nimport { getStonePosition, initBoard, serverIp } from '../../tools/tools'\nimport { io } from \"socket.io-client\"\n\nconst canvasOnMouseMove = (e, data) => {\n    if (data.endGame || data.turn === 'ai')\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (stone.y === 19)\n        return\n    if (!data.board[stone.y][stone.x]){\n        printBoard(data)\n        data.ctx.globalAlpha = 0.5\n        data.ctx.drawImage(\n            data.playerColor === data.WHITE ? data.images.whitePiece : data.images.blackPiece,\n            data.images.gomokuBoard.width * stone.x,\n            data.images.gomokuBoard.height * stone.y\n        )\n        data.ctx.globalAlpha = 1\n    }\n    else\n        printBoard(data)\n}\n\nconst printEndGameStatus = data => {\n\tvar params = {}\n    params[data.DRAW] = {\n        text : 'END OF GAME, NO WINNER',\n        color : 'orange'\n    }\n    params[data.playerColor] = {\n        text : 'YOU WON THE GAME !',\n        color : 'green'\n    }\n    params[data.aiColor] = {\n        text : 'YOU LOST THE GAME',\n        color : 'red'\n    }\n    document.getElementById('endGame').style.color = params[data.endGame].color\n    document.getElementById('endGame').innerHTML = params[data.endGame].text\n    document.getElementById('newGame').style.display = 'block'\n}\n\nconst setEndGame = data => {\n    printEndGameStatus(data)\n\tdata.socket.disconnect()\n}\n\nconst launchAi = data => {\n\tdata.startAi = window.performance.now()\n\tdata.aiLaunched = true\n\tdata.socket.emit('ai', {aiColor : data.aiColor, board : data.board})\n}\n\nconst receiveAiMove = (data, pos) => {\n    const timeAi = Math.floor(window.performance.now() - data.startAi)\n    data.board[pos.y][pos.x] = data.playerColor === data.BLACK ? data.WHITE : data.BLACK\n    data.piecesOnBoard += 1\n    var nbSeconds = Math.floor(timeAi / 1000) % 1000\n    var nbMilliSeconds = `${timeAi % 1000}`.padStart(3, '0')\n    data.aiMoves += 1\n    data.aiTotalTime += parseFloat(`${nbSeconds}.${nbMilliSeconds}`)\n    document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`\n    document.getElementById('timerAverage').innerHTML = `${(data.aiTotalTime / data.aiMoves).toFixed(3)}s`\n\tlaunch\n    printBoard(data)\n    if ((data.endGame = checkEndGame(data))){\n        setEndGame(data)\n        return\n    }\n    data.turn = 'human'\n\tdata.aiLaunched = false\n}\n\nconst canvasOnClick = (e, data) => {\n    if (data.endGame || data.turn === 'ai')\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (!data.board[stone.y][stone.x]){\n        data.board[stone.y][stone.x] = data.playerColor\n        data.piecesOnBoard += 1\n        printBoard(data)\n        if ((data.endGame = checkEndGame(data))){\n            setEndGame(data)\n            return\n        }\n        data.turn = 'ai'\n        launchAi(data, data.images, data.playerColor)\n    }\n}\n\nconst canvasOnMouseLeave = (e, data) => {\n    if (data.endGame || data.turn === 'ai')\n            return\n        printBoard(data)\n}\n\nconst initGame = (images, playerColor, firstPlayer) => {\n\t// test()\n    var data = {}\n\tdata.socket = io(serverIp, {query : {page : 'human vs ai'}})\n\tdata.aiLaunched = false\n    data.WHITE = 1\n    data.BLACK = 2\n    data.DRAW = 3\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n    data.turn = firstPlayer\n    data.aiMoves = 0\n    data.aiTotalTime = 0\n    data.piecesOnBoard = 0\n    data.playerColor = playerColor\n    data.aiColor = playerColor === data.WHITE ? data.BLACK : data.WHITE\n    data.images = images\n    printBoard(data)\n\tdata.socket.on('ai', pos => {receiveAiMove(data, pos)})\n    if (data.turn === 'ai')\n        launchAi(data)\n    data.canvas.onmousemove = e => canvasOnMouseMove(e, data)\n    data.canvas.onclick = e => canvasOnClick(e, data)\n    data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data)\n}\n\nexport default initGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}