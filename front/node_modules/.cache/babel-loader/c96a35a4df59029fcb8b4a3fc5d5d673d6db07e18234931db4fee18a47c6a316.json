{"ast":null,"code":"import { getStonePosition, initBoard } from '../../tools/tools';\nimport printBoard from '../../tools/printBoard';\nimport { checkEndGame } from '../../tools/checkEndGame';\nconst setEndGame = data => {};\nconst canvasOnMouseMove = (e, data) => {\n  if (data.endGame) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (stone.y === 19) return;\n  if (!data.board[stone.y][stone.x]) {\n    printBoard(data);\n    data.ctx.globalAlpha = 0.5;\n    data.ctx.drawImage(data.turn === data.WHITE ? data.images.whitePiece : data.images.blackPiece, data.images.gomokuBoard.width * stone.x, data.images.gomokuBoard.height * stone.y);\n    data.ctx.globalAlpha = 1;\n  } else printBoard(data);\n};\nconst canvasOnClick = (e, data) => {\n  if (data.endGame) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (!data.board[stone.y][stone.x]) {\n    data.board[stone.y][stone.x] = data.turn;\n    data.piecesOnBoard += 1;\n    printBoard(data);\n    if (data.endGame = checkEndGame(data, data.playerColor)) {\n      setEndGame(data);\n      return;\n    }\n    data.turn = data.turn === data.WHITE ? data.BLACK : data.WHITE;\n    launchIa(data, data.images, data.playerColor);\n  }\n};\nconst initGame = (firstPlayerColor, images) => {\n  var data = {};\n  data.WHITE = 1;\n  data.BLACK = 2;\n  data.DRAW = 3;\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  data.turn = firstPlayerColor;\n  data.piecesOnBoard = 0;\n  data.player1Color = firstPlayerColor;\n  data.images = images;\n  printBoard(data);\n  data.canvas.onmousemove = e => canvasOnMouseMove(e, data);\n  data.canvas.onclick = e => canvasOnClick(e, data);\n  data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data);\n};\nexport default initGame;","map":{"version":3,"names":["getStonePosition","initBoard","printBoard","checkEndGame","setEndGame","data","canvasOnMouseMove","e","endGame","canvasOffsetWidth","canvas","offsetWidth","canvasOffsetHeight","offsetHeight","stone","y","board","x","ctx","globalAlpha","drawImage","turn","WHITE","images","whitePiece","blackPiece","gomokuBoard","width","height","canvasOnClick","piecesOnBoard","playerColor","BLACK","launchIa","initGame","firstPlayerColor","DRAW","document","getElementById","getContext","player1Color","onmousemove","onclick","onmouseleave","canvasOnMouseLeave"],"sources":["/Users/adauchy/work/ft/myGomokuGit/gomoku/src/pages/humanVsHuman/initGame.js"],"sourcesContent":["\nimport { getStonePosition, initBoard } from '../../tools/tools'\nimport printBoard from '../../tools/printBoard'\nimport { checkEndGame } from '../../tools/checkEndGame'\n\nconst setEndGame = (data) => {\n\n}\n\nconst canvasOnMouseMove = (e, data) => {\n    if (data.endGame)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (stone.y === 19)\n        return\n    if (!data.board[stone.y][stone.x]){\n        printBoard(data)\n        data.ctx.globalAlpha = 0.5\n        data.ctx.drawImage(\n            data.turn === data.WHITE ? data.images.whitePiece : data.images.blackPiece,\n            data.images.gomokuBoard.width * stone.x,\n            data.images.gomokuBoard.height * stone.y\n        )\n        data.ctx.globalAlpha = 1\n    }\n    else\n        printBoard(data)\n}\n\nconst canvasOnClick = (e, data) => {\n    if (data.endGame)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (!data.board[stone.y][stone.x]){\n        data.board[stone.y][stone.x] = data.turn\n        data.piecesOnBoard += 1\n        printBoard(data)\n        if ((data.endGame = checkEndGame(data, data.playerColor))){\n            setEndGame(data)\n            return\n        }\n        data.turn = data.turn === data.WHITE ? data.BLACK : data.WHITE\n        launchIa(data, data.images, data.playerColor)\n    }\n}\n\nconst initGame = (firstPlayerColor, images) => {\n    var data = {}\n    data.WHITE = 1\n    data.BLACK = 2\n    data.DRAW = 3\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n    data.turn = firstPlayerColor\n    data.piecesOnBoard = 0\n    data.player1Color = firstPlayerColor\n    data.images = images\n    printBoard(data)\n    data.canvas.onmousemove = e => canvasOnMouseMove(e, data)\n    data.canvas.onclick = e => canvasOnClick(e, data)\n    data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data)\n}\n\nexport default initGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}