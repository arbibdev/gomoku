{"ast":null,"code":"import printBoard from \"./printBoard\";\nimport capture from '../sounds/capture.mp3';\nconst printCapturedStones = (data, captured, sizeStones, color) => {\n  var stone;\n  if (color === data.BLACK) stone = data.images.blackPiece;else stone = data.images.whitePiece;\n  for (var c = 0; c < captured.length; c += 1) {\n    data.ctx.drawImage(stone, data.images.gomokuBoard.width * captured[c].x - (sizeStones.width - data.images.gomokuBoard.width) / 2, data.images.gomokuBoard.height * captured[c].y - (sizeStones.height - data.images.gomokuBoard.height) / 2, sizeStones.width, sizeStones.height);\n  }\n};\nconst check_capture = (data, captured, pos, xIncrement, yIncrement, color, ennemyColor) => {\n  var x;\n  var y;\n  x = pos.x + xIncrement;\n  y = pos.y + yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === ennemyColor)) return;\n  x += xIncrement;\n  y += yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === ennemyColor)) return;\n  x += xIncrement;\n  y += yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === color)) return;\n  captured.push({\n    x: pos.x + xIncrement,\n    y: pos.y + yIncrement\n  });\n  captured.push({\n    x: pos.x + 2 * xIncrement,\n    y: pos.y + 2 * yIncrement\n  });\n};\nconst getCapturedStones = (data, captured, pos, color, ennemyColor) => {\n  check_capture(data, captured, pos, 0, -1, color, ennemyColor);\n  check_capture(data, captured, pos, 1, -1, color, ennemyColor);\n  check_capture(data, captured, pos, 1, 0, color, ennemyColor);\n  check_capture(data, captured, pos, 1, 1, color, ennemyColor);\n  check_capture(data, captured, pos, 0, 1, color, ennemyColor);\n  check_capture(data, captured, pos, -1, 1, color, ennemyColor);\n  check_capture(data, captured, pos, -1, 0, color, ennemyColor);\n  check_capture(data, captured, pos, -1, -1, color, ennemyColor);\n};\nconst launchCaptureAnimation = (data, pos, color) => {\n  return new Promise((resolve, reject) => {\n    var captured = [];\n    var ennemyColor;\n    if (color === data.BLACK) ennemyColor = data.WHITE;else ennemyColor = data.BLACK;\n    getCapturedStones(data, captured, pos, color, ennemyColor);\n    if (!captured.length) {\n      resolve(0);\n      return;\n    }\n    if (color === data.BLACK) data.captures.black += captured.length;else data.captures.white += captured.length;\n    for (var c = 0; c < captured.length; c += 1) {\n      data.board[captured[c].y][captured[c].x] = 0;\n    }\n    data.piecesOnBoard -= captured.length;\n    var sizeStones = {};\n    sizeStones.width = data.images.gomokuBoard.width;\n    sizeStones.height = data.images.gomokuBoard.height;\n    var audio = new Audio(capture);\n    audio.onload = () => {\n      console.log('loaded');\n    };\n    audio.play();\n    var inter = setInterval(() => {\n      printBoard(data);\n      printCapturedStones(data, captured, sizeStones, ennemyColor);\n      sizeStones.width -= data.images.gomokuBoard.width / 70;\n      sizeStones.height -= data.images.gomokuBoard.height / 70;\n      if (sizeStones.width <= 0 && sizeStones.height <= 0) {\n        clearInterval(inter);\n        resolve(captured.length);\n      }\n    }, 10);\n  });\n};\nexport default launchCaptureAnimation;","map":{"version":3,"names":["printBoard","capture","printCapturedStones","data","captured","sizeStones","color","stone","BLACK","images","blackPiece","whitePiece","c","length","ctx","drawImage","gomokuBoard","width","x","height","y","check_capture","pos","xIncrement","yIncrement","ennemyColor","board","push","getCapturedStones","launchCaptureAnimation","Promise","resolve","reject","WHITE","captures","black","white","piecesOnBoard","audio","Audio","onload","console","log","play","inter","setInterval","clearInterval"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/tools/launchCaptureAnimation.js"],"sourcesContent":["import printBoard from \"./printBoard\"\nimport capture from '../sounds/capture.mp3'\n\nconst printCapturedStones = (data, captured, sizeStones, color) => {\n\tvar stone\n\n\tif (color === data.BLACK)\n\t\tstone = data.images.blackPiece\n\telse\n\t\tstone = data.images.whitePiece\n\tfor (var c = 0; c < captured.length; c += 1){\n\t\tdata.ctx.drawImage(\n\t\t\tstone,\n\t\t\tdata.images.gomokuBoard.width * captured[c].x - ((sizeStones.width - data.images.gomokuBoard.width) / 2),\n\t\t\tdata.images.gomokuBoard.height * captured[c].y - ((sizeStones.height - data.images.gomokuBoard.height) / 2),\n\t\t\tsizeStones.width,\n\t\t\tsizeStones.height\n\t\t)\n\t}\n}\n\nconst check_capture = (data, captured, pos, xIncrement, yIncrement, color, ennemyColor) => {\n\tvar x;\n\tvar y;\n\n\tx = pos.x + xIncrement\n\ty = pos.y + yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t&& data.board[y][x] === ennemyColor))\n\t\treturn\n\tx += xIncrement\n\ty += yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t&& data.board[y][x] === ennemyColor))\n\t\treturn ;\n\tx += xIncrement\n\ty += yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t\t&& data.board[y][x] === color))\n\t\treturn ;\n\tcaptured.push({x : pos.x + xIncrement, y : pos.y + yIncrement})\n\tcaptured.push({x : pos.x + 2 * xIncrement, y : pos.y + 2 * yIncrement})\n}\n\nconst getCapturedStones = (data, captured, pos, color, ennemyColor) => {\n\n\tcheck_capture(data, captured, pos, 0, -1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, -1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, 0, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 0, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, 0, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, -1, color, ennemyColor)\n}\n\nconst launchCaptureAnimation = (data, pos, color) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar captured = [];\n\t\tvar ennemyColor;\n\t\tif (color === data.BLACK)\n\t\t\tennemyColor = data.WHITE\n\t\telse\n\t\t\tennemyColor = data.BLACK\n\t\tgetCapturedStones(data, captured, pos, color, ennemyColor)\n\t\tif (!captured.length){\n\t\t\tresolve(0)\n\t\t\treturn\n\t\t}\n\t\tif (color === data.BLACK)\n\t\t\tdata.captures.black += captured.length\n\t\telse\n\t\t\tdata.captures.white += captured.length\n\t\tfor (var c = 0; c < captured.length; c += 1){\n\t\t\tdata.board[captured[c].y][captured[c].x] = 0;\n\t\t}\n\t\tdata.piecesOnBoard -= captured.length\n\t\tvar sizeStones = {}\n\t\tsizeStones.width = data.images.gomokuBoard.width\n\t\tsizeStones.height = data.images.gomokuBoard.height\n\t\tvar audio = new Audio(capture)\n\t\taudio.onload = () => {\n\t\t\tconsole.log('loaded')\n\t\t}\n\t\taudio.play();\n\t\tvar inter = setInterval(() => {\n\t\t\tprintBoard(data)\n\t\t\tprintCapturedStones(data, captured, sizeStones, ennemyColor)\n\t\t\tsizeStones.width -= data.images.gomokuBoard.width / 70\n\t\t\tsizeStones.height -= data.images.gomokuBoard.height / 70\n\t\t\tif (sizeStones.width <= 0 && sizeStones.height <= 0){\n\t\t\t\tclearInterval(inter)\n\t\t\t\tresolve(captured.length)\n\t\t\t}\n\t\t}, 10)\n\t})\n}\n\nexport default launchCaptureAnimation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}