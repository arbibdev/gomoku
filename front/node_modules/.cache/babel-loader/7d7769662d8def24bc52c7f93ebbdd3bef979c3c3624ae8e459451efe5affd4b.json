{"ast":null,"code":"var imagesLoaded = 0;\nconst loadImages = (images, imagesToLoad) => {\n  return new Promise((resolve, reject) => {\n    for (var c = 0; c < imagesToLoad.length; c++) {\n      images[c] = new Image();\n      images[c].src = imagesToLoad[c];\n      // eslint-disable-next-line\n      images[c].onload = () => {\n        imagesLoaded += 1;\n        if (imagesLoaded === imagesToLoad.length) resolve();\n      };\n    }\n  });\n};\nexport default loadImages;","map":{"version":3,"names":["imagesLoaded","loadImages","images","imagesToLoad","Promise","resolve","reject","c","length","Image","src","onload"],"sources":["/Users/adauchy/work/ft/gomokuGit/gomoku/src/tools/loadImages.js"],"sourcesContent":["var imagesLoaded = 0\n\nconst loadImages = (images, imagesToLoad) => {\n    return new Promise((resolve, reject) => {      \n        for (var c = 0; c < imagesToLoad.length; c++){\n            images[c] = new Image()\n            images[c].src = imagesToLoad[c]\n            // eslint-disable-next-line\n            images[c].onload = () => {\n                imagesLoaded += 1\n                if (imagesLoaded === imagesToLoad.length)\n                    resolve()\n            }\n        }\n    })\n}\n\nexport default loadImages"],"mappings":"AAAA,IAAIA,YAAY,GAAG,CAAC;AAEpB,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,YAAY,KAAK;EACzC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,YAAY,CAACK,MAAM,EAAED,CAAC,EAAE,EAAC;MACzCL,MAAM,CAACK,CAAC,CAAC,GAAG,IAAIE,KAAK,EAAE;MACvBP,MAAM,CAACK,CAAC,CAAC,CAACG,GAAG,GAAGP,YAAY,CAACI,CAAC,CAAC;MAC/B;MACAL,MAAM,CAACK,CAAC,CAAC,CAACI,MAAM,GAAG,MAAM;QACrBX,YAAY,IAAI,CAAC;QACjB,IAAIA,YAAY,KAAKG,YAAY,CAACK,MAAM,EACpCH,OAAO,EAAE;MACjB,CAAC;IACL;EACJ,CAAC,CAAC;AACN,CAAC;AAED,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}