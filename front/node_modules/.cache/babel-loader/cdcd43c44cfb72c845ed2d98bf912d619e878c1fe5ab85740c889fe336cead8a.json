{"ast":null,"code":"import { getStonePosition, initBoard } from '../../tools/tools';\nimport printBoard from '../../tools/printBoard';\nconst canvasOnMouseMove = (e, data) => {\n  if (data.endGame) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (stone.y === 19) return;\n  if (!data.board[stone.y][stone.x]) {\n    printBoard(data);\n    data.ctx.globalAlpha = 0.5;\n    data.ctx.drawImage(data.turn === data.WHITE ? data.images.whitePiece : data.images.blackPiece, data.images.gomokuBoard.width * stone.x, data.images.gomokuBoard.height * stone.y);\n    data.ctx.globalAlpha = 1;\n  } else printBoard(data);\n};\nconst initGame = (firstPlayerColor, images) => {\n  var data = {};\n  data.WHITE = 1;\n  data.BLACK = 2;\n  data.DRAW = 3;\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  data.turn = firstPlayerColor;\n  data.piecesOnBoard = 0;\n  data.player1Color = firstPlayerColor;\n  data.images = images;\n  console;\n  printBoard(data);\n  data.canvas.onmousemove = e => canvasOnMouseMove(e, data);\n  data.canvas.onclick = e => canvasOnClick(e, data);\n  data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data);\n};\nexport default initGame;","map":{"version":3,"names":["getStonePosition","initBoard","printBoard","canvasOnMouseMove","e","data","endGame","canvasOffsetWidth","canvas","offsetWidth","canvasOffsetHeight","offsetHeight","stone","y","board","x","ctx","globalAlpha","drawImage","turn","WHITE","images","whitePiece","blackPiece","gomokuBoard","width","height","initGame","firstPlayerColor","BLACK","DRAW","document","getElementById","getContext","piecesOnBoard","player1Color","console","onmousemove","onclick","canvasOnClick","onmouseleave","canvasOnMouseLeave"],"sources":["/Users/adauchy/work/ft/myGomokuGit/gomoku/src/pages/humanVsHuman/initGame.js"],"sourcesContent":["\nimport { getStonePosition, initBoard } from '../../tools/tools'\nimport printBoard from '../../tools/printBoard'\n\nconst canvasOnMouseMove = (e, data) => {\n    if (data.endGame)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (stone.y === 19)\n        return\n    if (!data.board[stone.y][stone.x]){\n        printBoard(data)\n        data.ctx.globalAlpha = 0.5\n        data.ctx.drawImage(\n            data.turn === data.WHITE ? data.images.whitePiece : data.images.blackPiece,\n            data.images.gomokuBoard.width * stone.x,\n            data.images.gomokuBoard.height * stone.y\n        )\n        data.ctx.globalAlpha = 1\n    }\n    else\n        printBoard(data)\n}\nconst initGame = (firstPlayerColor, images) => {\n    var data = {}\n    data.WHITE = 1\n    data.BLACK = 2\n    data.DRAW = 3\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n    data.turn = firstPlayerColor\n    data.piecesOnBoard = 0\n    data.player1Color = firstPlayerColor\n    data.images = images\n    console\n    printBoard(data)\n    data.canvas.onmousemove = e => canvasOnMouseMove(e, data)\n    data.canvas.onclick = e => canvasOnClick(e, data)\n    data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data)\n}\n\nexport default initGame"],"mappings":"AACA,SAASA,gBAAgB,EAAEC,SAAS,QAAQ,mBAAmB;AAC/D,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,MAAMC,iBAAiB,GAAG,CAACC,CAAC,EAAEC,IAAI,KAAK;EACnC,IAAIA,IAAI,CAACC,OAAO,EACZ;EACJ,IAAIC,iBAAiB,GAAGF,IAAI,CAACG,MAAM,CAACC,WAAW;EAC/C,IAAIC,kBAAkB,GAAGL,IAAI,CAACG,MAAM,CAACG,YAAY;EACjD,IAAIC,KAAK,GAAGZ,gBAAgB,CAACK,IAAI,EAAED,CAAC,EAAEG,iBAAiB,EAAEG,kBAAkB,CAAC;EAC5E,IAAIE,KAAK,CAACC,CAAC,KAAK,EAAE,EACd;EACJ,IAAI,CAACR,IAAI,CAACS,KAAK,CAACF,KAAK,CAACC,CAAC,CAAC,CAACD,KAAK,CAACG,CAAC,CAAC,EAAC;IAC9Bb,UAAU,CAACG,IAAI,CAAC;IAChBA,IAAI,CAACW,GAAG,CAACC,WAAW,GAAG,GAAG;IAC1BZ,IAAI,CAACW,GAAG,CAACE,SAAS,CACdb,IAAI,CAACc,IAAI,KAAKd,IAAI,CAACe,KAAK,GAAGf,IAAI,CAACgB,MAAM,CAACC,UAAU,GAAGjB,IAAI,CAACgB,MAAM,CAACE,UAAU,EAC1ElB,IAAI,CAACgB,MAAM,CAACG,WAAW,CAACC,KAAK,GAAGb,KAAK,CAACG,CAAC,EACvCV,IAAI,CAACgB,MAAM,CAACG,WAAW,CAACE,MAAM,GAAGd,KAAK,CAACC,CAAC,CAC3C;IACDR,IAAI,CAACW,GAAG,CAACC,WAAW,GAAG,CAAC;EAC5B,CAAC,MAEGf,UAAU,CAACG,IAAI,CAAC;AACxB,CAAC;AACD,MAAMsB,QAAQ,GAAG,CAACC,gBAAgB,EAAEP,MAAM,KAAK;EAC3C,IAAIhB,IAAI,GAAG,CAAC,CAAC;EACbA,IAAI,CAACe,KAAK,GAAG,CAAC;EACdf,IAAI,CAACwB,KAAK,GAAG,CAAC;EACdxB,IAAI,CAACyB,IAAI,GAAG,CAAC;EACbzB,IAAI,CAACG,MAAM,GAAGuB,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;EAC/C3B,IAAI,CAACW,GAAG,GAAGX,IAAI,CAACG,MAAM,CAACyB,UAAU,CAAC,IAAI,CAAC;EACvC5B,IAAI,CAACS,KAAK,GAAGb,SAAS,EAAE;EACxBI,IAAI,CAACc,IAAI,GAAGS,gBAAgB;EAC5BvB,IAAI,CAAC6B,aAAa,GAAG,CAAC;EACtB7B,IAAI,CAAC8B,YAAY,GAAGP,gBAAgB;EACpCvB,IAAI,CAACgB,MAAM,GAAGA,MAAM;EACpBe,OAAO;EACPlC,UAAU,CAACG,IAAI,CAAC;EAChBA,IAAI,CAACG,MAAM,CAAC6B,WAAW,GAAGjC,CAAC,IAAID,iBAAiB,CAACC,CAAC,EAAEC,IAAI,CAAC;EACzDA,IAAI,CAACG,MAAM,CAAC8B,OAAO,GAAGlC,CAAC,IAAImC,aAAa,CAACnC,CAAC,EAAEC,IAAI,CAAC;EACjDA,IAAI,CAACG,MAAM,CAACgC,YAAY,GAAGpC,CAAC,IAAIqC,kBAAkB,CAACrC,CAAC,EAAEC,IAAI,CAAC;AAC/D,CAAC;AAED,eAAesB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}