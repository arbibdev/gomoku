{"ast":null,"code":"import { checkEndGame } from '../../tools/checkEndGame';\nimport printBoard from '../../tools/printBoard';\nimport { getStonePosition, initBoard, serverIp } from '../../tools/tools';\nimport { io } from \"socket.io-client\";\nimport styles from './humanVsAi.module.css';\nconst canvasOnMouseMove = (e, data) => {\n  if (data.endGame || data.turn === 'ai' || data.ongoingAnimation) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (stone.y === 19) return;\n  if (!data.board[stone.y][stone.x]) {\n    printBoard(data);\n    data.ctx.globalAlpha = 0.5;\n    data.ctx.drawImage(data.playerColor === data.WHITE ? data.images.whitePiece : data.images.blackPiece, data.images.gomokuBoard.width * stone.x, data.images.gomokuBoard.height * stone.y);\n    data.ctx.globalAlpha = 1;\n  } else printBoard(data);\n};\nconst printEndGameStatus = data => {\n  var params = {};\n  params[data.DRAW] = {\n    text: 'END OF GAME, NO WINNER',\n    color: 'orange'\n  };\n  params[data.playerColor] = {\n    text: 'YOU WON THE GAME !',\n    color: 'green'\n  };\n  params[data.aiColor] = {\n    text: 'YOU LOST THE GAME',\n    color: 'red'\n  };\n  document.getElementById('endGame').style.color = params[data.endGame].color;\n  document.getElementById('endGame').innerHTML = params[data.endGame].text;\n  document.getElementById('newGame').style.display = 'block';\n};\nconst setEndGame = data => {\n  printEndGameStatus(data);\n  data.socket.disconnect();\n};\nconst launchAi = data => {\n  data.startAi = window.performance.now();\n  data.aiLaunched = true;\n  data.socket.emit('ai', {\n    aiColor: data.aiColor,\n    board: data.board\n  });\n};\nconst printNewStone = (data, newStone, pos, color) => {\n  var stone;\n  if (color === data.BLACK) stone = data.images.blackPiece;else stone = data.images.whitePiece;\n  data.ctx.drawImage(stone, data.images.gomokuBoard.width * pos.x - (newStone.width - data.images.gomokuBoard.width) / 2, data.images.gomokuBoard.height * pos.y - (newStone.height - data.images.gomokuBoard.height) / 2, newStone.width, newStone.height);\n};\nconst check_capture = (data, captured, pos, xIncrement, yIncrement, color, ennemyColor) => {\n  var x;\n  var y;\n  x = pos.x + xIncrement;\n  y = pos.y + yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === ennemyColor)) return;\n  x += xIncrement;\n  y += yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === ennemyColor)) return;\n  x += xIncrement;\n  y += yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === color)) return;\n  captured.push({\n    x: pos.x + xIncrement,\n    y: pos.y + yIncrement\n  });\n  captured.push({\n    x: pos.x + 2 * xIncrement,\n    y: pos.y + 2 * yIncrement\n  });\n};\nconst getCapturedStones = (data, captured, pos, color, ennemyColor) => {\n  check_capture(data, captured, pos, 0, -1, color, ennemyColor);\n  check_capture(data, captured, pos, 1, -1, color, ennemyColor);\n  check_capture(data, captured, pos, 1, 0, color, ennemyColor);\n  check_capture(data, captured, pos, 1, 1, color, ennemyColor);\n  check_capture(data, captured, pos, 0, 1, color, ennemyColor);\n  check_capture(data, captured, pos, -1, 1, color, ennemyColor);\n  check_capture(data, captured, pos, -1, 0, color, ennemyColor);\n  check_capture(data, captured, pos, -1, -1, color, ennemyColor);\n};\nconst printCapturedStones = (data, captured, sizeStones, color) => {\n  var stone;\n  if (color === data.BLACK) stone = data.images.blackPiece;else stone = data.images.whitePiece;\n  for (var c = 0; c < captured.length; c += 1) {\n    data.ctx.drawImage(stone, data.images.gomokuBoard.width * captured[c].x - (sizeStones.width - data.images.gomokuBoard.width) / 2, data.images.gomokuBoard.height * captured[c].y - (sizeStones.height - data.images.gomokuBoard.height) / 2, sizeStones.width, sizeStones.height);\n  }\n};\nconst getTwoCapturedStones = (data, color) => {\n  var div;\n  var image;\n  var src;\n  div = document.createElement('div');\n  div.className = styles.twoCapturedStones;\n  if (color === data.BLACK) src = data.images.whitePiece.src;else src = data.images.blackPiece.src;\n  for (var c = 0; c < 2; c += 1) {\n    image = document.createElement('img');\n    image.className = styles.capturedStoneImg;\n    image.src = src;\n    div.append(image);\n  }\n  return div;\n};\nconst updateCapturedStones = (data, color, captures) => {\n  var html;\n  if (color === data.aiColor) {\n    html = document.getElementById('aiStonesCaptured');\n    document.getElementById('aiCaptures').innerHTML = `${data.captures.ai} / 10`;\n  } else {\n    html = document.getElementById('playerStonesCaptured');\n    document.getElementById('playerCaptures').innerHTML = `${data.captures.player} / 10`;\n  }\n  for (var c = 0; c < captures; c += 2) {\n    html.append(getTwoCapturedStones(data, color));\n  }\n};\nconst goToNextPlayer = (data, nextPlayer, color, captures) => {\n  if (captures) updateCapturedStones(data, color, captures);\n  if (data.endGame = checkEndGame(data)) {\n    setEndGame(data);\n    return;\n  }\n  if (nextPlayer === 'human') {\n    data.turn = 'human';\n    data.aiLaunched = false;\n  } else if (nextPlayer === 'ai') {\n    data.turn = 'ai';\n    launchAi(data, data.images, data.playerColor);\n  }\n  data.ongoingAnimation = 0;\n};\nconst launchCaptureAnimation = (data, pos, color, nextPlayer) => {\n  return new Promise((resolve, reject) => {\n    var captured = [];\n    var ennemyColor;\n    if (color === data.BLACK) ennemyColor = data.WHITE;else ennemyColor = data.BLACK;\n    getCapturedStones(data, captured, pos, color, ennemyColor);\n    if (!captured.length) {\n      goToNextPlayer(data, nextPlayer, color, 0);\n      resolve(0);\n      return;\n    }\n    if (color === data.aiColor) data.captures.ai += captured.length;else data.captures.player += captured.length;\n    for (var c = 0; c < captured.length; c += 1) {\n      data.board[captured[c].y][captured[c].x] = 0;\n    }\n    data.piecesOnBoard -= captured.length;\n    var sizeStones = {};\n    sizeStones.width = data.images.gomokuBoard.width;\n    sizeStones.height = data.images.gomokuBoard.height;\n    var inter = setInterval(() => {\n      printBoard(data);\n      printCapturedStones(data, captured, sizeStones, ennemyColor);\n      sizeStones.width -= data.images.gomokuBoard.width / 70;\n      sizeStones.height -= data.images.gomokuBoard.height / 70;\n      if (sizeStones.width <= 0 && sizeStones.height <= 0) {\n        clearInterval(inter);\n        resolve(captured.length);\n      }\n    }, 10);\n  });\n};\nconst launchPutStoneAnimation = (data, pos, color, nextPlayer) => {\n  return new Promise((resolve, reject) => {\n    data.ongoingAnimation = 1;\n    var newStone = {};\n    newStone.width = data.images.gomokuBoard.width * 10;\n    newStone.height = data.images.gomokuBoard.height * 10;\n    var inter = setInterval(() => {\n      printBoard(data);\n      printNewStone(data, newStone, pos, color);\n      newStone.width -= data.images.gomokuBoard.width / 4;\n      newStone.height -= data.images.gomokuBoard.height / 4;\n      if (newStone.width <= data.images.gomokuBoard.width && newStone.height <= data.images.gomokuBoard.height) {\n        data.board[pos.y][pos.x] = color;\n        data.piecesOnBoard += 1;\n        printBoard(data);\n        clearInterval(inter);\n        resolve();\n      }\n    }, 10);\n  });\n};\nconst receiveAiMove = (data, pos) => {\n  const timeAi = Math.floor(window.performance.now() - data.startAi);\n  var nbSeconds = Math.floor(timeAi / 1000) % 1000;\n  var nbMilliSeconds = `${timeAi % 1000}`.padStart(3, '0');\n  data.aiMoves += 1;\n  data.aiTotalTime += parseFloat(`${nbSeconds}.${nbMilliSeconds}`);\n  document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`;\n  document.getElementById('timerAverage').innerHTML = `${(data.aiTotalTime / data.aiMoves).toFixed(3)}s`;\n  launchPutStoneAnimation(data, stone, data.playerColor, 'ai').then(() => {\n    launchCaptureAnimation(data, stone, data.playerColor, 'ai').then(captures => {\n      goToNextPlayer(data, 'ai', data.playerColor, captures);\n    });\n  });\n};\nconst canvasOnClick = (e, data) => {\n  if (data.endGame || data.turn === 'ai' || data.ongoingAnimation) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (!data.board[stone.y][stone.x]) {\n    launchPutStoneAnimation(data, stone, data.playerColor, 'ai').then(() => {\n      launchCaptureAnimation(data, stone, data.playerColor, 'ai').then(captures => {\n        goToNextPlayer(data, 'ai', data.playerColor, captures);\n      });\n    });\n  }\n};\nconst canvasOnMouseLeave = (e, data) => {\n  if (data.endGame || data.turn === 'ai' || data.ongoingAnimation) return;\n  printBoard(data);\n};\nconst initGame = (images, playerColor, firstPlayer) => {\n  var data = {};\n  data.socket = io(serverIp, {\n    query: {\n      page: 'human vs ai'\n    }\n  });\n  data.captures = {\n    ai: 0,\n    player: 0\n  };\n  data.ongoingAnimation = 0;\n  data.aiLaunched = false;\n  data.WHITE = 1;\n  data.BLACK = 2;\n  data.DRAW = 3;\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  data.turn = firstPlayer;\n  data.aiMoves = 0;\n  data.aiTotalTime = 0;\n  data.piecesOnBoard = 0;\n  data.playerColor = playerColor;\n  data.aiColor = playerColor === data.WHITE ? data.BLACK : data.WHITE;\n  data.images = images;\n  printBoard(data);\n  data.socket.on('ai', pos => {\n    receiveAiMove(data, pos);\n  });\n  if (data.turn === 'ai') launchAi(data);\n  data.canvas.onmousemove = e => canvasOnMouseMove(e, data);\n  data.canvas.onclick = e => canvasOnClick(e, data);\n  data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data);\n};\nexport default initGame;","map":{"version":3,"names":["checkEndGame","printBoard","getStonePosition","initBoard","serverIp","io","styles","canvasOnMouseMove","e","data","endGame","turn","ongoingAnimation","canvasOffsetWidth","canvas","offsetWidth","canvasOffsetHeight","offsetHeight","stone","y","board","x","ctx","globalAlpha","drawImage","playerColor","WHITE","images","whitePiece","blackPiece","gomokuBoard","width","height","printEndGameStatus","params","DRAW","text","color","aiColor","document","getElementById","style","innerHTML","display","setEndGame","socket","disconnect","launchAi","startAi","window","performance","now","aiLaunched","emit","printNewStone","newStone","pos","BLACK","check_capture","captured","xIncrement","yIncrement","ennemyColor","push","getCapturedStones","printCapturedStones","sizeStones","c","length","getTwoCapturedStones","div","image","src","createElement","className","twoCapturedStones","capturedStoneImg","append","updateCapturedStones","captures","html","ai","player","goToNextPlayer","nextPlayer","launchCaptureAnimation","Promise","resolve","reject","piecesOnBoard","inter","setInterval","clearInterval","launchPutStoneAnimation","receiveAiMove","timeAi","Math","floor","nbSeconds","nbMilliSeconds","padStart","aiMoves","aiTotalTime","parseFloat","toFixed","then","canvasOnClick","canvasOnMouseLeave","initGame","firstPlayer","query","page","getContext","on","onmousemove","onclick","onmouseleave"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/pages/humanVsAi/initGame.js"],"sourcesContent":["import { checkEndGame } from '../../tools/checkEndGame'\nimport printBoard from '../../tools/printBoard'\nimport { getStonePosition, initBoard, serverIp } from '../../tools/tools'\nimport { io } from \"socket.io-client\"\nimport styles from './humanVsAi.module.css'\n\nconst canvasOnMouseMove = (e, data) => {\n    if (data.endGame || data.turn === 'ai' || data.ongoingAnimation)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (stone.y === 19)\n        return\n    if (!data.board[stone.y][stone.x]){\n        printBoard(data)\n        data.ctx.globalAlpha = 0.5\n        data.ctx.drawImage(\n            data.playerColor === data.WHITE ? data.images.whitePiece : data.images.blackPiece,\n            data.images.gomokuBoard.width * stone.x,\n            data.images.gomokuBoard.height * stone.y\n        )\n        data.ctx.globalAlpha = 1\n    }\n    else\n        printBoard(data)\n}\n\nconst printEndGameStatus = data => {\n\tvar params = {}\n    params[data.DRAW] = {\n        text : 'END OF GAME, NO WINNER',\n        color : 'orange'\n    }\n    params[data.playerColor] = {\n        text : 'YOU WON THE GAME !',\n        color : 'green'\n    }\n    params[data.aiColor] = {\n        text : 'YOU LOST THE GAME',\n        color : 'red'\n    }\n    document.getElementById('endGame').style.color = params[data.endGame].color\n    document.getElementById('endGame').innerHTML = params[data.endGame].text\n    document.getElementById('newGame').style.display = 'block'\n}\n\nconst setEndGame = data => {\n    printEndGameStatus(data)\n\tdata.socket.disconnect()\n}\n\nconst launchAi = data => {\n\tdata.startAi = window.performance.now()\n\tdata.aiLaunched = true\n\tdata.socket.emit('ai', {aiColor : data.aiColor, board : data.board})\n}\n\nconst printNewStone = (data, newStone, pos, color) => {\n\tvar stone\n\tif (color === data.BLACK)\n\t\tstone = data.images.blackPiece\n\telse\n\t\tstone = data.images.whitePiece\n\tdata.ctx.drawImage(\n\t\tstone,\n\t\tdata.images.gomokuBoard.width * pos.x - ((newStone.width - data.images.gomokuBoard.width) / 2),\n\t\tdata.images.gomokuBoard.height * pos.y - ((newStone.height - data.images.gomokuBoard.height) / 2),\n\t\tnewStone.width,\n\t\tnewStone.height\n\t)\n}\n\nconst check_capture = (data, captured, pos, xIncrement, yIncrement, color, ennemyColor) => {\n\tvar x;\n\tvar y;\n\n\tx = pos.x + xIncrement\n\ty = pos.y + yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t&& data.board[y][x] === ennemyColor))\n\t\treturn\n\tx += xIncrement\n\ty += yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t&& data.board[y][x] === ennemyColor))\n\t\treturn ;\n\tx += xIncrement\n\ty += yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t\t&& data.board[y][x] === color))\n\t\treturn ;\n\tcaptured.push({x : pos.x + xIncrement, y : pos.y + yIncrement})\n\tcaptured.push({x : pos.x + 2 * xIncrement, y : pos.y + 2 * yIncrement})\n}\n\nconst getCapturedStones = (data, captured, pos, color, ennemyColor) => {\n\n\tcheck_capture(data, captured, pos, 0, -1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, -1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, 0, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 0, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, 0, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, -1, color, ennemyColor)\n}\n\nconst printCapturedStones = (data, captured, sizeStones, color) => {\n\tvar stone\n\n\tif (color === data.BLACK)\n\t\tstone = data.images.blackPiece\n\telse\n\t\tstone = data.images.whitePiece\n\tfor (var c = 0; c < captured.length; c += 1){\n\t\tdata.ctx.drawImage(\n\t\t\tstone,\n\t\t\tdata.images.gomokuBoard.width * captured[c].x - ((sizeStones.width - data.images.gomokuBoard.width) / 2),\n\t\t\tdata.images.gomokuBoard.height * captured[c].y - ((sizeStones.height - data.images.gomokuBoard.height) / 2),\n\t\t\tsizeStones.width,\n\t\t\tsizeStones.height\n\t\t)\n\t}\n}\n\nconst getTwoCapturedStones = (data, color) => {\n\tvar div\n\tvar image\n\tvar src\n\n\tdiv = document.createElement('div')\n\tdiv.className = styles.twoCapturedStones\n\tif (color === data.BLACK)\n\t\tsrc = data.images.whitePiece.src\n\telse\n\t\tsrc = data.images.blackPiece.src\n\tfor (var c = 0; c < 2; c += 1){\n\t\timage = document.createElement('img')\n\t\timage.className = styles.capturedStoneImg\n\t\timage.src = src\n\t\tdiv.append(image)\n\t}\n\treturn div\n}\n\nconst updateCapturedStones = (data, color, captures) => {\n\tvar html\n\n\tif (color === data.aiColor){\n\t\thtml = document.getElementById('aiStonesCaptured')\n\t\tdocument.getElementById('aiCaptures').innerHTML = `${data.captures.ai} / 10`;\n\t}\n\telse{\n\t\thtml = document.getElementById('playerStonesCaptured')\n\t\tdocument.getElementById('playerCaptures').innerHTML = `${data.captures.player} / 10`;\n\t}\n\tfor (var c = 0; c < captures; c += 2){\n\t\t\n\t\thtml.append(getTwoCapturedStones(data, color))\n\t}\n}\n\nconst goToNextPlayer = (data, nextPlayer, color, captures) => {\n\t\n\tif (captures)\n\t\tupdateCapturedStones(data, color, captures)\n\tif ((data.endGame = checkEndGame(data))){\n\t\tsetEndGame(data)\n\t\treturn\n\t}\n\tif (nextPlayer === 'human'){\n\t\tdata.turn = 'human'\n\t\tdata.aiLaunched = false\n\t}\n\telse if (nextPlayer === 'ai'){\n\t\tdata.turn = 'ai'\n\t\tlaunchAi(data, data.images, data.playerColor)\n\t}\n\tdata.ongoingAnimation = 0\n}\n\nconst launchCaptureAnimation = (data, pos, color, nextPlayer) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar captured = [];\n\t\tvar ennemyColor;\n\t\tif (color === data.BLACK)\n\t\t\tennemyColor = data.WHITE\n\t\telse\n\t\t\tennemyColor = data.BLACK\n\t\tgetCapturedStones(data, captured, pos, color, ennemyColor)\n\t\tif (!captured.length){\n\t\t\tgoToNextPlayer(data, nextPlayer, color, 0)\n\t\t\tresolve(0)\n\t\t\treturn\n\t\t}\n\t\tif (color === data.aiColor)\n\t\t\tdata.captures.ai += captured.length\n\t\telse\n\t\t\tdata.captures.player += captured.length\n\t\tfor (var c = 0; c < captured.length; c += 1){\n\t\t\tdata.board[captured[c].y][captured[c].x] = 0;\n\t\t}\n\t\tdata.piecesOnBoard -= captured.length\n\t\tvar sizeStones = {}\n\t\tsizeStones.width = data.images.gomokuBoard.width\n\t\tsizeStones.height = data.images.gomokuBoard.height\n\t\tvar inter = setInterval(() => {\n\t\t\tprintBoard(data)\n\t\t\tprintCapturedStones(data, captured, sizeStones, ennemyColor)\n\t\t\tsizeStones.width -= data.images.gomokuBoard.width / 70\n\t\t\tsizeStones.height -= data.images.gomokuBoard.height / 70\n\t\t\tif (sizeStones.width <= 0 && sizeStones.height <= 0){\n\t\t\t\tclearInterval(inter)\n\t\t\t\tresolve(captured.length)\n\t\t\t}\n\t\t}, 10)\n\t})\n}\n\nconst launchPutStoneAnimation = (data, pos, color, nextPlayer) => {\n\treturn new Promise((resolve, reject) => {\n\t\tdata.ongoingAnimation = 1\n\t\tvar newStone = {}\n\t\tnewStone.width = data.images.gomokuBoard.width * 10;\n\t\tnewStone.height = data.images.gomokuBoard.height * 10;\n\t\tvar inter = setInterval(() => {\n\t\t\tprintBoard(data)\n\t\t\tprintNewStone(data, newStone, pos, color);\n\t\t\tnewStone.width -= data.images.gomokuBoard.width / 4;\n\t\t\tnewStone.height -= data.images.gomokuBoard.height / 4;\n\t\t\tif (newStone.width <= data.images.gomokuBoard.width &&\n\t\t\tnewStone.height <= data.images.gomokuBoard.height){\n\t\t\t\tdata.board[pos.y][pos.x] = color\n\t\t\t\tdata.piecesOnBoard += 1;\n\t\t\t\tprintBoard(data)\n\t\t\t\tclearInterval(inter)\n\t\t\t\tresolve()\n\t\t\t}\n\t\t}, 10);\n\t})\n\t\n}\n\nconst receiveAiMove = (data, pos) => {\n    const timeAi = Math.floor(window.performance.now() - data.startAi)\n    var nbSeconds = Math.floor(timeAi / 1000) % 1000\n    var nbMilliSeconds = `${timeAi % 1000}`.padStart(3, '0')\n    data.aiMoves += 1\n    data.aiTotalTime += parseFloat(`${nbSeconds}.${nbMilliSeconds}`)\n    document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`\n    document.getElementById('timerAverage').innerHTML = `${(data.aiTotalTime / data.aiMoves).toFixed(3)}s`\n\tlaunchPutStoneAnimation(data, stone, data.playerColor, 'ai').then(() => {\n\t\tlaunchCaptureAnimation(data, stone, data.playerColor, 'ai').then((captures) => {\n\t\t\tgoToNextPlayer(data, 'ai', data.playerColor, captures)\n\t\t})\n\t})\n}\n\nconst canvasOnClick = (e, data) => {\n    if (data.endGame || data.turn === 'ai' || data.ongoingAnimation)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (!data.board[stone.y][stone.x]){\n\t\tlaunchPutStoneAnimation(data, stone, data.playerColor, 'ai').then(() => {\n\t\t\tlaunchCaptureAnimation(data, stone, data.playerColor, 'ai').then((captures) => {\n\t\t\t\tgoToNextPlayer(data, 'ai', data.playerColor, captures)\n\t\t\t})\n\t\t})\n    }\n}\n\nconst canvasOnMouseLeave = (e, data) => {\n    if (data.endGame || data.turn === 'ai' || data.ongoingAnimation)\n            return\n        printBoard(data)\n}\n\nconst initGame = (images, playerColor, firstPlayer) => {\n    var data = {}\n\tdata.socket = io(serverIp, {query : {page : 'human vs ai'}})\n\tdata.captures = {ai : 0, player : 0}\n\tdata.ongoingAnimation = 0\n\tdata.aiLaunched = false\n    data.WHITE = 1\n    data.BLACK = 2\n    data.DRAW = 3\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n    data.turn = firstPlayer\n    data.aiMoves = 0\n    data.aiTotalTime = 0\n    data.piecesOnBoard = 0\n    data.playerColor = playerColor\n    data.aiColor = playerColor === data.WHITE ? data.BLACK : data.WHITE\n    data.images = images\n    printBoard(data)\n\tdata.socket.on('ai', pos => {receiveAiMove(data, pos)})\n    if (data.turn === 'ai')\n        launchAi(data)\n    data.canvas.onmousemove = e => canvasOnMouseMove(e, data)\n    data.canvas.onclick = e => canvasOnClick(e, data)\n    data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data)\n}\n\nexport default initGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}