{"ast":null,"code":"const getTwoCapturedStones = (data, color, styles) => {\n  var div;\n  var image;\n  var src;\n  div = document.createElement('div');\n  div.className = styles.twoCapturedStones;\n  if (color === data.BLACK) src = data.images.whitePiece.src;else src = data.images.blackPiece.src;\n  for (var c = 0; c < 2; c += 1) {\n    image = document.createElement('img');\n    image.className = styles.capturedStoneImg;\n    image.src = src;\n    div.append(image);\n  }\n  return div;\n};\nconst updateCapturedStones = (data, color, captures, styles) => {\n  var html;\n  if (color === data.BLACK) {\n    html = document.getElementById('blackStonesCaptured');\n    document.getElementById('blackCaptures').innerHTML = `${data.captures.black} / 10`;\n  } else {\n    html = document.getElementById('whiteStonesCaptured');\n    document.getElementById('whiteCaptures').innerHTML = `${data.captures.white} / 10`;\n  }\n  for (var c = 0; c < captures; c += 2) html.append(getTwoCapturedStones(data, color, styles));\n};\nexport default updateCapturedStones;","map":{"version":3,"names":["getTwoCapturedStones","data","color","styles","div","image","src","document","createElement","className","twoCapturedStones","BLACK","images","whitePiece","blackPiece","c","capturedStoneImg","append","updateCapturedStones","captures","html","getElementById","innerHTML","black","white"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/tools/updateCapturedStones.js"],"sourcesContent":["const getTwoCapturedStones = (data, color, styles) => {\n\tvar div\n\tvar image\n\tvar src\n\n\tdiv = document.createElement('div')\n\tdiv.className = styles.twoCapturedStones\n\tif (color === data.BLACK)\n\t\tsrc = data.images.whitePiece.src\n\telse\n\t\tsrc = data.images.blackPiece.src\n\tfor (var c = 0; c < 2; c += 1){\n\t\timage = document.createElement('img')\n\t\timage.className = styles.capturedStoneImg\n\t\timage.src = src\n\t\tdiv.append(image)\n\t}\n\treturn div\n}\n\nconst updateCapturedStones = (data, color, captures, styles) => {\n\tvar html\n\n\tif (color === data.BLACK){\n\t\thtml = document.getElementById('blackStonesCaptured')\n\t\tdocument.getElementById('blackCaptures').innerHTML = `${data.captures.black} / 10`;\n\t}\n\telse{\n\t\thtml = document.getElementById('whiteStonesCaptured')\n\t\tdocument.getElementById('whiteCaptures').innerHTML = `${data.captures.white} / 10`;\n\t}\n\tfor (var c = 0; c < captures; c += 2)\n\t\thtml.append(getTwoCapturedStones(data, color, styles))\n}\n\nexport default updateCapturedStones"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,KAAK;EACrD,IAAIC,GAAG;EACP,IAAIC,KAAK;EACT,IAAIC,GAAG;EAEPF,GAAG,GAAGG,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EACnCJ,GAAG,CAACK,SAAS,GAAGN,MAAM,CAACO,iBAAiB;EACxC,IAAIR,KAAK,KAAKD,IAAI,CAACU,KAAK,EACvBL,GAAG,GAAGL,IAAI,CAACW,MAAM,CAACC,UAAU,CAACP,GAAG,MAEhCA,GAAG,GAAGL,IAAI,CAACW,MAAM,CAACE,UAAU,CAACR,GAAG;EACjC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAC;IAC7BV,KAAK,GAAGE,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACrCH,KAAK,CAACI,SAAS,GAAGN,MAAM,CAACa,gBAAgB;IACzCX,KAAK,CAACC,GAAG,GAAGA,GAAG;IACfF,GAAG,CAACa,MAAM,CAACZ,KAAK,CAAC;EAClB;EACA,OAAOD,GAAG;AACX,CAAC;AAED,MAAMc,oBAAoB,GAAG,CAACjB,IAAI,EAAEC,KAAK,EAAEiB,QAAQ,EAAEhB,MAAM,KAAK;EAC/D,IAAIiB,IAAI;EAER,IAAIlB,KAAK,KAAKD,IAAI,CAACU,KAAK,EAAC;IACxBS,IAAI,GAAGb,QAAQ,CAACc,cAAc,CAAC,qBAAqB,CAAC;IACrDd,QAAQ,CAACc,cAAc,CAAC,eAAe,CAAC,CAACC,SAAS,GAAI,GAAErB,IAAI,CAACkB,QAAQ,CAACI,KAAM,OAAM;EACnF,CAAC,MACG;IACHH,IAAI,GAAGb,QAAQ,CAACc,cAAc,CAAC,qBAAqB,CAAC;IACrDd,QAAQ,CAACc,cAAc,CAAC,eAAe,CAAC,CAACC,SAAS,GAAI,GAAErB,IAAI,CAACkB,QAAQ,CAACK,KAAM,OAAM;EACnF;EACA,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,QAAQ,EAAEJ,CAAC,IAAI,CAAC,EACnCK,IAAI,CAACH,MAAM,CAACjB,oBAAoB,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,CAAC,CAAC;AACxD,CAAC;AAED,eAAee,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}