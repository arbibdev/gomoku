{"ast":null,"code":"import { getStonePosition, initBoard } from '../../tools/tools';\nimport printBoard from '../../tools/printBoard';\nimport { checkEndGame } from '../../tools/checkEndGame';\nimport ia from '../../tools/ia/ia';\nconst getSuggestion = data => {\n  data.iaColor = data.turn;\n  data.playerColor = data.turn === data.WHITE ? data.BLACK : data.WHITE;\n  return ia(data);\n};\nconst printSuggestion = data => {};\nconst setEndGame = data => {};\nconst canvasOnMouseMove = (e, data) => {\n  if (data.endGame) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (stone.y === 19) return;\n  if (!data.board[stone.y][stone.x]) {\n    printBoard(data);\n    data.ctx.globalAlpha = 0.5;\n    data.ctx.drawImage(data.turn === data.WHITE ? data.images.whitePiece : data.images.blackPiece, data.images.gomokuBoard.width * stone.x, data.images.gomokuBoard.height * stone.y);\n    data.ctx.globalAlpha = 1;\n  } else printBoard(data);\n};\nconst canvasOnClick = (e, data) => {\n  if (data.endGame) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (!data.board[stone.y][stone.x]) {\n    data.board[stone.y][stone.x] = data.turn;\n    data.piecesOnBoard += 1;\n    printBoard(data);\n    if (data.endGame = checkEndGame(data, data.playerColor)) {\n      setEndGame(data);\n      return;\n    }\n    data.turn = data.turn === data.WHITE ? data.BLACK : data.WHITE;\n  }\n};\nconst canvasOnMouseLeave = (e, data) => {\n  if (data.endGame) return;\n  printBoard(data);\n};\nconst initGame = (images, firstPlayerColor) => {\n  var data = {};\n  data.WHITE = 1;\n  data.BLACK = 2;\n  data.DRAW = 3;\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  data.turn = firstPlayerColor;\n  data.piecesOnBoard = 0;\n  data.player1Color = firstPlayerColor;\n  data.images = images;\n  data.suggestion = getSuggestion(data);\n  printBoard(data);\n  printSuggestion(data);\n  data.canvas.onmousemove = e => canvasOnMouseMove(e, data);\n  data.canvas.onclick = e => canvasOnClick(e, data);\n  data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data);\n};\nexport default initGame;","map":{"version":3,"names":["getStonePosition","initBoard","printBoard","checkEndGame","ia","getSuggestion","data","iaColor","turn","playerColor","WHITE","BLACK","printSuggestion","setEndGame","canvasOnMouseMove","e","endGame","canvasOffsetWidth","canvas","offsetWidth","canvasOffsetHeight","offsetHeight","stone","y","board","x","ctx","globalAlpha","drawImage","images","whitePiece","blackPiece","gomokuBoard","width","height","canvasOnClick","piecesOnBoard","canvasOnMouseLeave","initGame","firstPlayerColor","DRAW","document","getElementById","getContext","player1Color","suggestion","onmousemove","onclick","onmouseleave"],"sources":["/Users/adauchy/work/ft/myGomokuGit/gomoku/src/pages/humanVsHuman/initGame.js"],"sourcesContent":["\nimport { getStonePosition, initBoard } from '../../tools/tools'\nimport printBoard from '../../tools/printBoard'\nimport { checkEndGame } from '../../tools/checkEndGame'\nimport ia from '../../tools/ia/ia'\n\nconst getSuggestion = data => {\n    data.iaColor = data.turn\n    data.playerColor = data.turn === data.WHITE ? data.BLACK : data.WHITE\n    return ia(data)\n}\n\nconst printSuggestion = data => {\n    \n}\n\nconst setEndGame = (data) => {\n\n}\n\nconst canvasOnMouseMove = (e, data) => {\n    if (data.endGame)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (stone.y === 19)\n        return\n    if (!data.board[stone.y][stone.x]){\n        printBoard(data)\n        data.ctx.globalAlpha = 0.5\n        data.ctx.drawImage(\n            data.turn === data.WHITE ? data.images.whitePiece : data.images.blackPiece,\n            data.images.gomokuBoard.width * stone.x,\n            data.images.gomokuBoard.height * stone.y\n        )\n        data.ctx.globalAlpha = 1\n    }\n    else\n        printBoard(data)\n}\n\nconst canvasOnClick = (e, data) => {\n    if (data.endGame)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (!data.board[stone.y][stone.x]){\n        data.board[stone.y][stone.x] = data.turn\n        data.piecesOnBoard += 1\n        printBoard(data)\n        if ((data.endGame = checkEndGame(data, data.playerColor))){\n            setEndGame(data)\n            return\n        }\n        data.turn = data.turn === data.WHITE ? data.BLACK : data.WHITE\n    }\n}\n\nconst canvasOnMouseLeave = (e, data) => {\n    if (data.endGame)\n            return\n        printBoard(data)\n}\n\nconst initGame = (images, firstPlayerColor) => {\n    var data = {}\n    data.WHITE = 1\n    data.BLACK = 2\n    data.DRAW = 3\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n    data.turn = firstPlayerColor\n    data.piecesOnBoard = 0\n    data.player1Color = firstPlayerColor\n    data.images = images\n    data.suggestion = getSuggestion(data)\n    printBoard(data)\n    printSuggestion(data)\n    data.canvas.onmousemove = e => canvasOnMouseMove(e, data)\n    data.canvas.onclick = e => canvasOnClick(e, data)\n    data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data)\n}\n\nexport default initGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}