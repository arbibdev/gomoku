{"ast":null,"code":"import ia from '../../tools/ia/ia';\nimport { checkEndGame } from './checkEndGame';\nimport printBoard from '../../tools/printBoard';\nimport getStonePosition from '../../tools/';\nconst initBoard = () => {\n  var board = [];\n  for (var y = 0; y < 19; y++) {\n    board[y] = [];\n    for (var x = 0; x < 19; x++) {\n      board[y][x] = 0;\n    }\n  }\n  return board;\n};\nconst canvasOnMouseMove = (e, data) => {\n  if (data.endGame || data.turn === 'ia') return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (stone.y === 19) return;\n  if (!data.board[stone.y][stone.x]) {\n    printBoard(data);\n    data.ctx.globalAlpha = 0.5;\n    data.ctx.drawImage(data.playerColor === data.WHITE ? data.images.whitePiece : data.images.blackPiece, data.images.gomokuBoard.width * stone.x, data.images.gomokuBoard.height * stone.y);\n    data.ctx.globalAlpha = 1;\n  } else printBoard(data);\n};\nconst setEndGame = data => {\n  var params = {};\n  params[data.DRAW] = {\n    text: 'END OF GAME, NO WINNER',\n    color: 'orange'\n  };\n  params[data.playerColor] = {\n    text: 'YOU WON THE GAME !',\n    color: 'green'\n  };\n  params[data.iaColor] = {\n    text: 'YOU LOST THE GAME',\n    color: 'red'\n  };\n  document.getElementById('endGame').style.color = params[data.endGame].color;\n  document.getElementById('endGame').innerHTML = params[data.endGame].text;\n  document.getElementById('newGame').style.display = 'block';\n};\nconst launchIa = data => {\n  const startIa = window.performance.now();\n  var pos = ia(data);\n  const timeIa = Math.floor(window.performance.now() - startIa);\n  data.board[pos.y][pos.x] = data.playerColor === data.BLACK ? data.WHITE : data.BLACK;\n  data.piecesOnBoard += 1;\n  var nbSeconds = Math.floor(timeIa / 1000) % 1000;\n  var nbMilliSeconds = `${timeIa % 1000}`.padStart(3, '0');\n  data.iaMoves += 1;\n  data.iaTotalTime += parseFloat(`${nbSeconds}.${nbMilliSeconds}`);\n  document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`;\n  document.getElementById('timerAverage').innerHTML = `${(data.iaTotalTime / data.iaMoves).toFixed(3)}s`;\n  printBoard(data);\n  if (data.endGame = checkEndGame(data)) {\n    setEndGame(data);\n    return;\n  }\n  data.turn = 'human';\n};\nconst canvasOnClick = (e, data) => {\n  if (data.endGame || data.turn === 'ia') return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (!data.board[stone.y][stone.x]) {\n    data.board[stone.y][stone.x] = data.playerColor;\n    data.piecesOnBoard += 1;\n    printBoard(data);\n    if (data.endGame = checkEndGame(data, data.playerColor)) {\n      setEndGame(data);\n      return;\n    }\n    data.turn = 'ia';\n    launchIa(data, data.images, data.playerColor);\n  }\n};\nconst canvasOnMouseLeave = (e, data) => {\n  if (data.endGame || data.turn === 'ia') return;\n  printBoard(data);\n};\nconst initGame = (images, playerColor, firstPlayer) => {\n  var data = {};\n  data.WHITE = 1;\n  data.BLACK = 2;\n  data.DRAW = 3;\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  data.turn = firstPlayer;\n  data.iaMoves = 0;\n  data.iaTotalTime = 0;\n  data.piecesOnBoard = 0;\n  data.playerColor = playerColor;\n  data.iaColor = playerColor === data.WHITE ? data.BLACK : data.WHITE;\n  data.images = images;\n  printBoard(data);\n  if (data.turn === 'ia') launchIa(data);\n  data.canvas.onmousemove = e => canvasOnMouseMove(e, data);\n  data.canvas.onclick = e => canvasOnClick(e, data);\n  data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data);\n};\nexport default initGame;","map":{"version":3,"names":["ia","checkEndGame","printBoard","getStonePosition","initBoard","board","y","x","canvasOnMouseMove","e","data","endGame","turn","canvasOffsetWidth","canvas","offsetWidth","canvasOffsetHeight","offsetHeight","stone","ctx","globalAlpha","drawImage","playerColor","WHITE","images","whitePiece","blackPiece","gomokuBoard","width","height","setEndGame","params","DRAW","text","color","iaColor","document","getElementById","style","innerHTML","display","launchIa","startIa","window","performance","now","pos","timeIa","Math","floor","BLACK","piecesOnBoard","nbSeconds","nbMilliSeconds","padStart","iaMoves","iaTotalTime","parseFloat","toFixed","canvasOnClick","canvasOnMouseLeave","initGame","firstPlayer","getContext","onmousemove","onclick","onmouseleave"],"sources":["/Users/adauchy/work/ft/myGomokuGit/gomoku/src/pages/humanVsAi/initGame.js"],"sourcesContent":["import ia from '../../tools/ia/ia'\nimport { checkEndGame } from './checkEndGame'\nimport printBoard from '../../tools/printBoard'\nimport getStonePosition from '../../tools/'\n\nconst initBoard = () => {\n    var board = []\n    for (var y = 0; y < 19; y++){\n        board[y] = []\n        for (var x = 0; x < 19; x++){\n            board[y][x] = 0\n        }\n    }\n    return board\n}\n\nconst canvasOnMouseMove = (e, data) => {\n    if (data.endGame || data.turn === 'ia')\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (stone.y === 19)\n        return\n    if (!data.board[stone.y][stone.x]){\n        printBoard(data)\n        data.ctx.globalAlpha = 0.5\n        data.ctx.drawImage(\n            data.playerColor === data.WHITE ? data.images.whitePiece : data.images.blackPiece,\n            data.images.gomokuBoard.width * stone.x,\n            data.images.gomokuBoard.height * stone.y\n        )\n        data.ctx.globalAlpha = 1\n    }\n    else\n        printBoard(data)\n}\n\nconst setEndGame = (data) => {\n    var params = {}\n    params[data.DRAW] = {\n        text : 'END OF GAME, NO WINNER',\n        color : 'orange'\n    }\n    params[data.playerColor] = {\n        text : 'YOU WON THE GAME !',\n        color : 'green'\n    }\n    params[data.iaColor] = {\n        text : 'YOU LOST THE GAME',\n        color : 'red'\n    }\n    document.getElementById('endGame').style.color = params[data.endGame].color\n    document.getElementById('endGame').innerHTML = params[data.endGame].text\n    document.getElementById('newGame').style.display = 'block'\n}\n\nconst launchIa = (data) => {\n    const startIa = window.performance.now()\n    var pos = ia(data)\n    const timeIa = Math.floor(window.performance.now() - startIa)\n    data.board[pos.y][pos.x] = data.playerColor === data.BLACK ? data.WHITE : data.BLACK\n    data.piecesOnBoard += 1\n    var nbSeconds = Math.floor(timeIa / 1000) % 1000\n    var nbMilliSeconds = `${timeIa % 1000}`.padStart(3, '0')\n    data.iaMoves += 1\n    data.iaTotalTime += parseFloat(`${nbSeconds}.${nbMilliSeconds}`)\n    document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`\n    document.getElementById('timerAverage').innerHTML = `${(data.iaTotalTime / data.iaMoves).toFixed(3)}s`\n    printBoard(data)\n    if ((data.endGame = checkEndGame(data))){\n        setEndGame(data)\n        return\n    }\n    data.turn = 'human'\n}\n\nconst canvasOnClick = (e, data) => {\n    if (data.endGame || data.turn === 'ia')\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (!data.board[stone.y][stone.x]){\n        data.board[stone.y][stone.x] = data.playerColor\n        data.piecesOnBoard += 1\n        printBoard(data)\n        if ((data.endGame = checkEndGame(data, data.playerColor))){\n            setEndGame(data)\n            return\n        }\n        data.turn = 'ia'\n        launchIa(data, data.images, data.playerColor)\n    }\n}\n\nconst canvasOnMouseLeave = (e, data) => {\n    if (data.endGame || data.turn === 'ia')\n            return\n        printBoard(data)\n}\n\nconst initGame = (images, playerColor, firstPlayer) => {\n    var data = {}\n    data.WHITE = 1\n    data.BLACK = 2\n    data.DRAW = 3\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n    data.turn = firstPlayer\n    data.iaMoves = 0\n    data.iaTotalTime = 0\n    data.piecesOnBoard = 0\n    data.playerColor = playerColor\n    data.iaColor = playerColor === data.WHITE ? data.BLACK : data.WHITE\n    data.images = images\n    printBoard(data)\n    if (data.turn === 'ia')\n        launchIa(data)\n    data.canvas.onmousemove = e => canvasOnMouseMove(e, data)\n    data.canvas.onclick = e => canvasOnClick(e, data)\n    data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data)\n}\n\nexport default initGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}