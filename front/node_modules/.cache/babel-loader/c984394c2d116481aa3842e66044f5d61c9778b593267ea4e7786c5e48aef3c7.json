{"ast":null,"code":"const inBoard = pos => {\n  if (pos.x >= 0 && pos.x < 19 && pos.y >= 0 && pos.y < 19) return true;\n  return false;\n};\nconst getColor = (board, pos) => {\n  return board[pos.y][pos.x];\n};\nconst capturePossible = (board, x, y, color, ennemyColor, increment) => {\n  var pos = [{\n    x: x + increment * 2,\n    y: y + increment * 2\n  }, {\n    x: x + increment,\n    y: y + increment\n  }, {\n    x,\n    y\n  }, {\n    x: x - increment,\n    y: y - increment\n  }, {\n    x: x - increment * 2,\n    y: y - increment * 2\n  }];\n  if (inBoard(pos[0]) && getColor(board, pos[0]) === color && inBoard(pos[1]) && getColor(board, pos[1]) === ennemyColor && inBoard(pos[3]) && getColor(board, pos[3]) === 0) return true;\n  if (inBoard(pos[1]) && getColor(board, pos[1]) === color && inBoard(pos[3]) && getColor(board, pos[3]) === ennemyColor && inBoard(pos[4]) && getColor(board, pos[4]) === 0) return true;\n  if (inBoard(pos[1]) && getColor(board, pos[1]) === 0 && inBoard(pos[3]) && getColor(board, pos[3]) === ennemyColor && inBoard(pos[4]) && getColor(board, pos[4]) === color) return true;\n  if (inBoard(pos[0]) && getColor(board, pos[0]) === 0 && inBoard(pos[1]) && getColor(board, pos[1]) === ennemyColor && inBoard(pos[3]) && getColor(board, pos[3]) === color) return true;\n  return false;\n};\nconst checkAlignment = (x, y, data, xIncrement, yIncrement, captureIncrement) => {\n  var sizeAlignment = 0;\n  var color = data.board[y][x];\n  var ennemyColor;\n  if (color == data.BLACK) ennemyColor = data.WHITE;else ennemyColor = data.BLACK;\n  while (x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === color && !capturePossible(data.board, x, y, ennemyColor, color, captureIncrement)) {\n    sizeAlignment += 1;\n    x += xIncrement;\n    y += yIncrement;\n  }\n  if (sizeAlignment >= 5) {\n    return color;\n  }\n  return false;\n};\nconst checkAlignments = (x, y, data) => {\n  var winner;\n  if ((winner = checkAlignment(x, y, data, 0, 1, [[-1, 0], [-1, -1], [-1, 1]])) || (winner = checkAlignment(x, y, data, 1, 0, [[0, -1], [-1, -1], [1, -1]])) || (winner = checkAlignment(x, y, data, 1, 1, [[-1, 1], [-1, 0], [0, 1]])) || (winner = checkAlignment(x, y, data, -1, 1, [[-1, -1], [0, -1], [-1, 0]]))) return winner;\n  return false;\n};\nconst checkBoard = data => {\n  var winner;\n  for (var y = 0; y < 19; y++) {\n    for (var x = 0; x < 19; x++) {\n      if (data.board[y][x] && (winner = checkAlignments(x, y, data))) return winner;\n    }\n  }\n  return false;\n};\nconst checkEndGame = data => {\n  if (data.piecesOnBoard === 361) return data.DRAW;\n  if (data.captures.white >= 10) return data.WHITE;\n  if (data.captures.black >= 10) return data.BLACK;\n  return checkBoard(data);\n};\nexport default checkEndGame;","map":{"version":3,"names":["inBoard","pos","x","y","getColor","board","capturePossible","color","ennemyColor","increment","checkAlignment","data","xIncrement","yIncrement","captureIncrement","sizeAlignment","BLACK","WHITE","checkAlignments","winner","checkBoard","checkEndGame","piecesOnBoard","DRAW","captures","white","black"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/tools/checkEndGame.js"],"sourcesContent":["const inBoard = pos => {\n\tif (pos.x >= 0 && pos.x < 19 && pos.y >= 0 && pos.y < 19)\n\t\treturn true\n\treturn false\n}\n\nconst getColor = (board, pos) => {\n\treturn board[pos.y][pos.x]\n}\n\nconst capturePossible = (board, x, y, color, ennemyColor, increment) => {\n\tvar pos = [\n\t\t{x : x + increment * 2, y : y + increment * 2},\n\t\t{x : x + increment, y : y + increment},\n\t\t{x, y},\n\t\t{x : x - increment, y : y - increment},\n\t\t{x : x - increment * 2, y : y - increment * 2}\n\t]\n\tif (inBoard(pos[0]) && getColor(board, pos[0]) === color &&\n\t\tinBoard(pos[1]) && getColor(board, pos[1]) === ennemyColor &&\n\t\tinBoard(pos[3]) && getColor(board, pos[3]) === 0)\n\t\treturn true\n\tif (inBoard(pos[1]) && getColor(board, pos[1]) === color &&\n\t\tinBoard(pos[3]) && getColor(board, pos[3]) === ennemyColor &&\n\t\tinBoard(pos[4]) && getColor(board, pos[4]) === 0)\n\t\treturn true\n\tif (inBoard(pos[1]) && getColor(board, pos[1]) === 0 &&\n\t\tinBoard(pos[3]) && getColor(board, pos[3]) === ennemyColor &&\n\t\tinBoard(pos[4]) && getColor(board, pos[4]) === color)\n\t\treturn true\n\tif (inBoard(pos[0]) && getColor(board, pos[0]) === 0 &&\n\t\tinBoard(pos[1]) && getColor(board, pos[1]) === ennemyColor &&\n\t\tinBoard(pos[3]) && getColor(board, pos[3]) === color)\n\t\treturn true\n\treturn false\n}\n\nconst checkAlignment = (x, y, data, xIncrement, yIncrement, captureIncrement) => {\n\tvar sizeAlignment = 0\n\tvar color = data.board[y][x]\n\tvar ennemyColor\n\tif (color == data.BLACK)\n\t\tennemyColor = data.WHITE\n\telse\n\t\tennemyColor = data.BLACK\n\twhile (x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === color\n\t\t&& !capturePossible(data.board, x, y, ennemyColor, color, captureIncrement)){\n\t\tsizeAlignment += 1;\n\t\tx += xIncrement\n\t\ty += yIncrement\n\t}\n\tif (sizeAlignment >= 5){\n\t\treturn color\n\t}\n\treturn false\n}\n\nconst checkAlignments = (x, y, data) => {\n    var winner\n    if (\n        (winner = checkAlignment(x, y, data, 0, 1, [[-1, 0], [-1, -1], [-1, 1]])) ||\n        (winner = checkAlignment(x, y, data, 1, 0, [[0, -1], [-1, -1], [1, -1]])) ||\n        (winner = checkAlignment(x, y, data, 1, 1, [[-1, 1], [-1, 0], [0, 1]])) ||\n        (winner = checkAlignment(x, y, data, -1, 1, [[-1, -1], [0, -1], [-1, 0]]))\n    )\n        return winner\n    return false\n}\n\nconst checkBoard = data => {\n    var winner\n    for (var y = 0; y < 19; y++){\n        for (var x = 0; x < 19; x++){\n            if (data.board[y][x] && (winner = checkAlignments(x, y, data)))\n                return winner;\n        }\n    }\n\treturn false\n}\n\nconst checkEndGame = (data) => {\n    if (data.piecesOnBoard === 361)\n        return data.DRAW\n\tif (data.captures.white >= 10)\n\t\treturn data.WHITE\n\tif (data.captures.black >= 10)\n\t\treturn data.BLACK\n\treturn checkBoard(data)\n}\n\nexport default checkEndGame"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,GAAG,IAAI;EACtB,IAAIA,GAAG,CAACC,CAAC,IAAI,CAAC,IAAID,GAAG,CAACC,CAAC,GAAG,EAAE,IAAID,GAAG,CAACE,CAAC,IAAI,CAAC,IAAIF,GAAG,CAACE,CAAC,GAAG,EAAE,EACvD,OAAO,IAAI;EACZ,OAAO,KAAK;AACb,CAAC;AAED,MAAMC,QAAQ,GAAG,CAACC,KAAK,EAAEJ,GAAG,KAAK;EAChC,OAAOI,KAAK,CAACJ,GAAG,CAACE,CAAC,CAAC,CAACF,GAAG,CAACC,CAAC,CAAC;AAC3B,CAAC;AAED,MAAMI,eAAe,GAAG,CAACD,KAAK,EAAEH,CAAC,EAAEC,CAAC,EAAEI,KAAK,EAAEC,WAAW,EAAEC,SAAS,KAAK;EACvE,IAAIR,GAAG,GAAG,CACT;IAACC,CAAC,EAAGA,CAAC,GAAGO,SAAS,GAAG,CAAC;IAAEN,CAAC,EAAGA,CAAC,GAAGM,SAAS,GAAG;EAAC,CAAC,EAC9C;IAACP,CAAC,EAAGA,CAAC,GAAGO,SAAS;IAAEN,CAAC,EAAGA,CAAC,GAAGM;EAAS,CAAC,EACtC;IAACP,CAAC;IAAEC;EAAC,CAAC,EACN;IAACD,CAAC,EAAGA,CAAC,GAAGO,SAAS;IAAEN,CAAC,EAAGA,CAAC,GAAGM;EAAS,CAAC,EACtC;IAACP,CAAC,EAAGA,CAAC,GAAGO,SAAS,GAAG,CAAC;IAAEN,CAAC,EAAGA,CAAC,GAAGM,SAAS,GAAG;EAAC,CAAC,CAC9C;EACD,IAAIT,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKM,KAAK,IACvDP,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKO,WAAW,IAC1DR,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAChD,OAAO,IAAI;EACZ,IAAID,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKM,KAAK,IACvDP,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKO,WAAW,IAC1DR,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAChD,OAAO,IAAI;EACZ,IAAID,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IACnDD,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKO,WAAW,IAC1DR,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKM,KAAK,EACpD,OAAO,IAAI;EACZ,IAAIP,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IACnDD,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKO,WAAW,IAC1DR,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKM,KAAK,EACpD,OAAO,IAAI;EACZ,OAAO,KAAK;AACb,CAAC;AAED,MAAMG,cAAc,GAAG,CAACR,CAAC,EAAEC,CAAC,EAAEQ,IAAI,EAAEC,UAAU,EAAEC,UAAU,EAAEC,gBAAgB,KAAK;EAChF,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIR,KAAK,GAAGI,IAAI,CAACN,KAAK,CAACF,CAAC,CAAC,CAACD,CAAC,CAAC;EAC5B,IAAIM,WAAW;EACf,IAAID,KAAK,IAAII,IAAI,CAACK,KAAK,EACtBR,WAAW,GAAGG,IAAI,CAACM,KAAK,MAExBT,WAAW,GAAGG,IAAI,CAACK,KAAK;EACzB,OAAOd,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAG,EAAE,IAAIC,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAG,EAAE,IAAIQ,IAAI,CAACN,KAAK,CAACF,CAAC,CAAC,CAACD,CAAC,CAAC,KAAKK,KAAK,IACrE,CAACD,eAAe,CAACK,IAAI,CAACN,KAAK,EAAEH,CAAC,EAAEC,CAAC,EAAEK,WAAW,EAAED,KAAK,EAAEO,gBAAgB,CAAC,EAAC;IAC5EC,aAAa,IAAI,CAAC;IAClBb,CAAC,IAAIU,UAAU;IACfT,CAAC,IAAIU,UAAU;EAChB;EACA,IAAIE,aAAa,IAAI,CAAC,EAAC;IACtB,OAAOR,KAAK;EACb;EACA,OAAO,KAAK;AACb,CAAC;AAED,MAAMW,eAAe,GAAG,CAAChB,CAAC,EAAEC,CAAC,EAAEQ,IAAI,KAAK;EACpC,IAAIQ,MAAM;EACV,IACI,CAACA,MAAM,GAAGT,cAAc,CAACR,CAAC,EAAEC,CAAC,EAAEQ,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MACvEQ,MAAM,GAAGT,cAAc,CAACR,CAAC,EAAEC,CAAC,EAAEQ,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KACxEQ,MAAM,GAAGT,cAAc,CAACR,CAAC,EAAEC,CAAC,EAAEQ,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KACtEQ,MAAM,GAAGT,cAAc,CAACR,CAAC,EAAEC,CAAC,EAAEQ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAE1E,OAAOQ,MAAM;EACjB,OAAO,KAAK;AAChB,CAAC;AAED,MAAMC,UAAU,GAAGT,IAAI,IAAI;EACvB,IAAIQ,MAAM;EACV,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAC;IACxB,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAC;MACxB,IAAIS,IAAI,CAACN,KAAK,CAACF,CAAC,CAAC,CAACD,CAAC,CAAC,KAAKiB,MAAM,GAAGD,eAAe,CAAChB,CAAC,EAAEC,CAAC,EAAEQ,IAAI,CAAC,CAAC,EAC1D,OAAOQ,MAAM;IACrB;EACJ;EACH,OAAO,KAAK;AACb,CAAC;AAED,MAAME,YAAY,GAAIV,IAAI,IAAK;EAC3B,IAAIA,IAAI,CAACW,aAAa,KAAK,GAAG,EAC1B,OAAOX,IAAI,CAACY,IAAI;EACvB,IAAIZ,IAAI,CAACa,QAAQ,CAACC,KAAK,IAAI,EAAE,EAC5B,OAAOd,IAAI,CAACM,KAAK;EAClB,IAAIN,IAAI,CAACa,QAAQ,CAACE,KAAK,IAAI,EAAE,EAC5B,OAAOf,IAAI,CAACK,KAAK;EAClB,OAAOI,UAAU,CAACT,IAAI,CAAC;AACxB,CAAC;AAED,eAAeU,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}