{"ast":null,"code":"const getTwoCapturedStones = (data, color) => {\n  var div;\n  var image;\n  var src;\n  div = document.createElement('div');\n  div.className = styles.twoCapturedStones;\n  if (color === data.BLACK) src = data.images.whitePiece.src;else src = data.images.blackPiece.src;\n  for (var c = 0; c < 2; c += 1) {\n    image = document.createElement('img');\n    image.className = styles.capturedStoneImg;\n    image.src = src;\n    div.append(image);\n  }\n  return div;\n};\nconst updateCapturedStones = (data, color, captures) => {\n  var html;\n  if (color === data.aiColor) {\n    html = document.getElementById('aiStonesCaptured');\n    document.getElementById('aiCaptures').innerHTML = `${data.captures.ai} / 10`;\n  } else {\n    html = document.getElementById('playerStonesCaptured');\n    document.getElementById('playerCaptures').innerHTML = `${data.captures.player} / 10`;\n  }\n  for (var c = 0; c < captures; c += 2) {\n    html.append(getTwoCapturedStones(data, color));\n  }\n};","map":{"version":3,"names":["getTwoCapturedStones","data","color","div","image","src","document","createElement","className","styles","twoCapturedStones","BLACK","images","whitePiece","blackPiece","c","capturedStoneImg","append","updateCapturedStones","captures","html","aiColor","getElementById","innerHTML","ai","player"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/tools/updateCapturedStones.js"],"sourcesContent":["const getTwoCapturedStones = (data, color) => {\n\tvar div\n\tvar image\n\tvar src\n\n\tdiv = document.createElement('div')\n\tdiv.className = styles.twoCapturedStones\n\tif (color === data.BLACK)\n\t\tsrc = data.images.whitePiece.src\n\telse\n\t\tsrc = data.images.blackPiece.src\n\tfor (var c = 0; c < 2; c += 1){\n\t\timage = document.createElement('img')\n\t\timage.className = styles.capturedStoneImg\n\t\timage.src = src\n\t\tdiv.append(image)\n\t}\n\treturn div\n}\n\nconst updateCapturedStones = (data, color, captures) => {\n\tvar html\n\n\tif (color === data.aiColor){\n\t\thtml = document.getElementById('aiStonesCaptured')\n\t\tdocument.getElementById('aiCaptures').innerHTML = `${data.captures.ai} / 10`;\n\t}\n\telse{\n\t\thtml = document.getElementById('playerStonesCaptured')\n\t\tdocument.getElementById('playerCaptures').innerHTML = `${data.captures.player} / 10`;\n\t}\n\tfor (var c = 0; c < captures; c += 2){\n\t\t\n\t\thtml.append(getTwoCapturedStones(data, color))\n\t}\n}"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC7C,IAAIC,GAAG;EACP,IAAIC,KAAK;EACT,IAAIC,GAAG;EAEPF,GAAG,GAAGG,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EACnCJ,GAAG,CAACK,SAAS,GAAGC,MAAM,CAACC,iBAAiB;EACxC,IAAIR,KAAK,KAAKD,IAAI,CAACU,KAAK,EACvBN,GAAG,GAAGJ,IAAI,CAACW,MAAM,CAACC,UAAU,CAACR,GAAG,MAEhCA,GAAG,GAAGJ,IAAI,CAACW,MAAM,CAACE,UAAU,CAACT,GAAG;EACjC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAC;IAC7BX,KAAK,GAAGE,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACrCH,KAAK,CAACI,SAAS,GAAGC,MAAM,CAACO,gBAAgB;IACzCZ,KAAK,CAACC,GAAG,GAAGA,GAAG;IACfF,GAAG,CAACc,MAAM,CAACb,KAAK,CAAC;EAClB;EACA,OAAOD,GAAG;AACX,CAAC;AAED,MAAMe,oBAAoB,GAAG,CAACjB,IAAI,EAAEC,KAAK,EAAEiB,QAAQ,KAAK;EACvD,IAAIC,IAAI;EAER,IAAIlB,KAAK,KAAKD,IAAI,CAACoB,OAAO,EAAC;IAC1BD,IAAI,GAAGd,QAAQ,CAACgB,cAAc,CAAC,kBAAkB,CAAC;IAClDhB,QAAQ,CAACgB,cAAc,CAAC,YAAY,CAAC,CAACC,SAAS,GAAI,GAAEtB,IAAI,CAACkB,QAAQ,CAACK,EAAG,OAAM;EAC7E,CAAC,MACG;IACHJ,IAAI,GAAGd,QAAQ,CAACgB,cAAc,CAAC,sBAAsB,CAAC;IACtDhB,QAAQ,CAACgB,cAAc,CAAC,gBAAgB,CAAC,CAACC,SAAS,GAAI,GAAEtB,IAAI,CAACkB,QAAQ,CAACM,MAAO,OAAM;EACrF;EACA,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,QAAQ,EAAEJ,CAAC,IAAI,CAAC,EAAC;IAEpCK,IAAI,CAACH,MAAM,CAACjB,oBAAoB,CAACC,IAAI,EAAEC,KAAK,CAAC,CAAC;EAC/C;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}