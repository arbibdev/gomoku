{"ast":null,"code":"import printBoard from \"./printBoard\";\nimport capture from '../sounds/capture.mp3';\nconst printCapturedStones = (data, captured, sizeStones, color) => {\n  var stone;\n  if (color === data.BLACK) stone = data.images.blackPiece;else stone = data.images.whitePiece;\n  for (var c = 0; c < captured.length; c += 1) {\n    data.ctx.drawImage(stone, data.images.gomokuBoard.width * captured[c].x - (sizeStones.width - data.images.gomokuBoard.width) / 2, data.images.gomokuBoard.height * captured[c].y - (sizeStones.height - data.images.gomokuBoard.height) / 2, sizeStones.width, sizeStones.height);\n  }\n};\nconst check_capture = (data, captured, pos, xIncrement, yIncrement, color, ennemyColor) => {\n  var x;\n  var y;\n  x = pos.x + xIncrement;\n  y = pos.y + yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === ennemyColor)) return;\n  x += xIncrement;\n  y += yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === ennemyColor)) return;\n  x += xIncrement;\n  y += yIncrement;\n  if (!(x >= 0 && x < 19 && y >= 0 && y < 19 && data.board[y][x] === color)) return;\n  captured.push({\n    x: pos.x + xIncrement,\n    y: pos.y + yIncrement\n  });\n  captured.push({\n    x: pos.x + 2 * xIncrement,\n    y: pos.y + 2 * yIncrement\n  });\n};\nconst getCapturedStones = (data, captured, pos, color, ennemyColor) => {\n  check_capture(data, captured, pos, 0, -1, color, ennemyColor);\n  check_capture(data, captured, pos, 1, -1, color, ennemyColor);\n  check_capture(data, captured, pos, 1, 0, color, ennemyColor);\n  check_capture(data, captured, pos, 1, 1, color, ennemyColor);\n  check_capture(data, captured, pos, 0, 1, color, ennemyColor);\n  check_capture(data, captured, pos, -1, 1, color, ennemyColor);\n  check_capture(data, captured, pos, -1, 0, color, ennemyColor);\n  check_capture(data, captured, pos, -1, -1, color, ennemyColor);\n};\nasync function launchCaptureAnimation(data, pos, color) {\n  var captured = [];\n  var ennemyColor;\n  if (color === data.BLACK) ennemyColor = data.WHITE;else ennemyColor = data.BLACK;\n  getCapturedStones(data, captured, pos, color, ennemyColor);\n  if (!captured.length) {\n    return 0;\n  }\n  if (color === data.BLACK) data.captures.black += captured.length;else data.captures.white += captured.length;\n  for (var c = 0; c < captured.length; c += 1) {\n    data.board[captured[c].y][captured[c].x] = 0;\n  }\n  data.piecesOnBoard -= captured.length;\n  var sizeStones = {};\n  sizeStones.width = data.images.gomokuBoard.width;\n  sizeStones.height = data.images.gomokuBoard.height;\n  var audio = new Audio(capture);\n  audio.play();\n  var inter = setInterval(() => {\n    printBoard(data);\n    printCapturedStones(data, captured, sizeStones, ennemyColor);\n    sizeStones.width -= data.images.gomokuBoard.width / 70;\n    sizeStones.height -= data.images.gomokuBoard.height / 70;\n    if (sizeStones.width <= 0 && sizeStones.height <= 0) {\n      clearInterval(inter);\n      resolve(captured.length);\n      return captured.length;\n    }\n  }, 10);\n}\nexport default launchCaptureAnimation;","map":{"version":3,"names":["printBoard","capture","printCapturedStones","data","captured","sizeStones","color","stone","BLACK","images","blackPiece","whitePiece","c","length","ctx","drawImage","gomokuBoard","width","x","height","y","check_capture","pos","xIncrement","yIncrement","ennemyColor","board","push","getCapturedStones","launchCaptureAnimation","WHITE","captures","black","white","piecesOnBoard","audio","Audio","play","inter","setInterval","clearInterval","resolve"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/tools/launchCaptureAnimation.js"],"sourcesContent":["import printBoard from \"./printBoard\"\nimport capture from '../sounds/capture.mp3'\n\nconst printCapturedStones = (data, captured, sizeStones, color) => {\n\tvar stone\n\n\tif (color === data.BLACK)\n\t\tstone = data.images.blackPiece\n\telse\n\t\tstone = data.images.whitePiece\n\tfor (var c = 0; c < captured.length; c += 1){\n\t\tdata.ctx.drawImage(\n\t\t\tstone,\n\t\t\tdata.images.gomokuBoard.width * captured[c].x - ((sizeStones.width - data.images.gomokuBoard.width) / 2),\n\t\t\tdata.images.gomokuBoard.height * captured[c].y - ((sizeStones.height - data.images.gomokuBoard.height) / 2),\n\t\t\tsizeStones.width,\n\t\t\tsizeStones.height\n\t\t)\n\t}\n}\n\nconst check_capture = (data, captured, pos, xIncrement, yIncrement, color, ennemyColor) => {\n\tvar x;\n\tvar y;\n\n\tx = pos.x + xIncrement\n\ty = pos.y + yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t&& data.board[y][x] === ennemyColor))\n\t\treturn\n\tx += xIncrement\n\ty += yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t&& data.board[y][x] === ennemyColor))\n\t\treturn ;\n\tx += xIncrement\n\ty += yIncrement\n\tif (!(x >= 0 && x < 19 && y >= 0 && y < 19\n\t\t&& data.board[y][x] === color))\n\t\treturn ;\n\tcaptured.push({x : pos.x + xIncrement, y : pos.y + yIncrement})\n\tcaptured.push({x : pos.x + 2 * xIncrement, y : pos.y + 2 * yIncrement})\n}\n\nconst getCapturedStones = (data, captured, pos, color, ennemyColor) => {\n\n\tcheck_capture(data, captured, pos, 0, -1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, -1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, 0, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 1, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, 0, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, 1, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, 0, color, ennemyColor)\n\tcheck_capture(data, captured, pos, -1, -1, color, ennemyColor)\n}\n\nasync function launchCaptureAnimation(data, pos, color){\n\tvar captured = [];\n\tvar ennemyColor;\n\tif (color === data.BLACK)\n\t\tennemyColor = data.WHITE\n\telse\n\t\tennemyColor = data.BLACK\n\tgetCapturedStones(data, captured, pos, color, ennemyColor)\n\tif (!captured.length){\n\t\treturn 0\n\t}\n\tif (color === data.BLACK)\n\t\tdata.captures.black += captured.length\n\telse\n\t\tdata.captures.white += captured.length\n\tfor (var c = 0; c < captured.length; c += 1){\n\t\tdata.board[captured[c].y][captured[c].x] = 0;\n\t}\n\tdata.piecesOnBoard -= captured.length\n\tvar sizeStones = {}\n\tsizeStones.width = data.images.gomokuBoard.width\n\tsizeStones.height = data.images.gomokuBoard.height\n\tvar audio = new Audio(capture)\n\taudio.play()\n\tvar inter = setInterval(() => {\n\t\tprintBoard(data)\n\t\tprintCapturedStones(data, captured, sizeStones, ennemyColor)\n\t\tsizeStones.width -= data.images.gomokuBoard.width / 70\n\t\tsizeStones.height -= data.images.gomokuBoard.height / 70\n\t\tif (sizeStones.width <= 0 && sizeStones.height <= 0){\n\t\t\tclearInterval(inter)\n\t\t\tresolve(captured.length)\n\t\t\treturn captured.length\n\t\t}\n\t}, 10)\n}\n\nexport default launchCaptureAnimation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}