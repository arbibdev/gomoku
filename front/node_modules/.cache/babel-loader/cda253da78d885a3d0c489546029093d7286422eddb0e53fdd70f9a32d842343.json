{"ast":null,"code":"import getRandomInt from \"../../tools/getRandomInt\";\nconst createTree = (depth, nbChilds) => {\n  var node = {};\n  var child = 0;\n  node.var = getRandomInt(1000);\n  while (child < nbChilds) {\n    if (depth > 0) node[child] = createTree(depth - 1, nbChilds);\n    child += 1;\n  }\n  return node;\n};\nconst printTree = (tree, indentation) => {\n  var nbNode = 0;\n  var prefix = '';\n  for (var c = 0; c < indentation; c++) {\n    prefix += '----';\n  }\n  console.log(`${prefix}(${tree.var})`);\n  while (tree[nbNode]) {\n    printTree(tree[nbNode], indentation + 1);\n    nbNode++;\n  }\n};\nconst drawTree = (tree, depth) => {\n  const data = {};\n  data.canvas = document.createElement('CANVAS');\n  data.ctx = data.canvas.getContext('2d');\n  // var myTree = createTree(3, 2)\n  // printTree(myTree, 0)\n  canvas.width = 100;\n  canvas.height = 100;\n  ctx.drawTree;\n};\nexport default drawTree;","map":{"version":3,"names":["getRandomInt","createTree","depth","nbChilds","node","child","var","printTree","tree","indentation","nbNode","prefix","c","console","log","drawTree","data","canvas","document","createElement","ctx","getContext","width","height"],"sources":["/Users/adauchy/work/ft/myGomokuGit/gomoku/src/pages/humanvsia/drawTree.js"],"sourcesContent":["import getRandomInt from \"../../tools/getRandomInt\"\n\nconst createTree = (depth, nbChilds) => {\n    var node = {}\n    var child = 0\n    node.var = getRandomInt(1000)\n    while (child < nbChilds){\n        if (depth > 0)\n            node[child] = createTree(depth - 1, nbChilds)\n        child += 1\n    }\n    return node\n}\n\nconst printTree = (tree, indentation) => {\n    var nbNode = 0\n    var prefix = ''\n    for (var c = 0; c < indentation; c++){\n        prefix += '----'\n    }\n    console.log(`${prefix}(${tree.var})`)\n    while (tree[nbNode]){\n        printTree(tree[nbNode], indentation + 1)\n        nbNode++\n    }\n}\n\nconst drawTree = (tree, depth) => {\n    const data = {}\n    data.canvas = document.createElement('CANVAS');\n    data.ctx = data.canvas.getContext('2d')\n    // var myTree = createTree(3, 2)\n    // printTree(myTree, 0)\n    canvas.width = 100\n    canvas.height = 100\n    ctx.drawTree\n}\n\nexport default drawTree"],"mappings":"AAAA,OAAOA,YAAY,MAAM,0BAA0B;AAEnD,MAAMC,UAAU,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACpC,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC;EACbD,IAAI,CAACE,GAAG,GAAGN,YAAY,CAAC,IAAI,CAAC;EAC7B,OAAOK,KAAK,GAAGF,QAAQ,EAAC;IACpB,IAAID,KAAK,GAAG,CAAC,EACTE,IAAI,CAACC,KAAK,CAAC,GAAGJ,UAAU,CAACC,KAAK,GAAG,CAAC,EAAEC,QAAQ,CAAC;IACjDE,KAAK,IAAI,CAAC;EACd;EACA,OAAOD,IAAI;AACf,CAAC;AAED,MAAMG,SAAS,GAAG,CAACC,IAAI,EAAEC,WAAW,KAAK;EACrC,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,EAAEG,CAAC,EAAE,EAAC;IACjCD,MAAM,IAAI,MAAM;EACpB;EACAE,OAAO,CAACC,GAAG,CAAE,GAAEH,MAAO,IAAGH,IAAI,CAACF,GAAI,GAAE,CAAC;EACrC,OAAOE,IAAI,CAACE,MAAM,CAAC,EAAC;IAChBH,SAAS,CAACC,IAAI,CAACE,MAAM,CAAC,EAAED,WAAW,GAAG,CAAC,CAAC;IACxCC,MAAM,EAAE;EACZ;AACJ,CAAC;AAED,MAAMK,QAAQ,GAAG,CAACP,IAAI,EAAEN,KAAK,KAAK;EAC9B,MAAMc,IAAI,GAAG,CAAC,CAAC;EACfA,IAAI,CAACC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC9CH,IAAI,CAACI,GAAG,GAAGJ,IAAI,CAACC,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACvC;EACA;EACAJ,MAAM,CAACK,KAAK,GAAG,GAAG;EAClBL,MAAM,CAACM,MAAM,GAAG,GAAG;EACnBH,GAAG,CAACL,QAAQ;AAChB,CAAC;AAED,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}