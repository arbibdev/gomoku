{"ast":null,"code":"var _jsxFileName = \"/Users/adauchy/work/ft/gomokuGit/gomoku/src/pages/generateText.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport gomokuBoard from '../images/gomokuBoard.png';\nimport blackPiece from '../images/blackPiece.png';\nimport whitePiece from '../images/whitePiece.png';\nimport styles from './generateText.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadImages = () => {\n  return new Promise((resolve, reject) => {\n    const imagesToLoad = [gomokuBoard, blackPiece, whitePiece];\n    var imagesLoaded = 0;\n    var images = [];\n    for (var c = 0; c < imagesToLoad.length; c++) {\n      images[c] = new Image();\n      images[c].src = imagesToLoad[c];\n      images[c].onload = () => {\n        imagesLoaded += 1;\n        if (imagesLoaded === imagesToLoad.length) resolve(images);\n      };\n    }\n  });\n};\nconst getText = () => {\n  return [[1, 1, 1, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [1, 0, 0, 1]];\n};\nconst printText = (data, images, text) => {\n  for (var y = 0; y < text.length; y++) {\n    for (var x = 0; x < text[y].length; x++) {\n      data.ctx.drawImage(images[data.BLACKPIECE]);\n    }\n  }\n};\nconst write = images => {\n  const data = {};\n  data.GOMOKUBOARD = 0;\n  data.WHITEPIECE = 1;\n  data.BLACKPIECE = 2;\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  // data.ctx.drawImage(images[GOMOKUBOARD], 0, 0)\n  // data.ctx.drawImage(images[GOMOKUBOARD], images[GOMOKUBOARD].width, 0)\n  console.log(images[data.GOMOKUBOARD]);\n  const text = getText();\n  printText(data, images, text);\n};\nconst GenerateText = () => {\n  _s();\n  const [images, setImages] = useState(false);\n  useEffect(() => {\n    if (!images) {\n      loadImages().then(images => {\n        setImages(images);\n      });\n    } else write(images);\n  });\n  if (images) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      width: \"5000\",\n      height: \"5000\",\n      className: styles.canvas,\n      children: \"Impossible to load the canvas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"CHARGEMENT...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(GenerateText, \"Z2Yyxga9tYMo9+jbXAmml4jI2J0=\");\n_c = GenerateText;\nexport default GenerateText;\nvar _c;\n$RefreshReg$(_c, \"GenerateText\");","map":{"version":3,"names":["useEffect","useState","gomokuBoard","blackPiece","whitePiece","styles","loadImages","Promise","resolve","reject","imagesToLoad","imagesLoaded","images","c","length","Image","src","onload","getText","printText","data","text","y","x","ctx","drawImage","BLACKPIECE","write","GOMOKUBOARD","WHITEPIECE","canvas","document","getElementById","getContext","console","log","GenerateText","setImages","then"],"sources":["/Users/adauchy/work/ft/gomokuGit/gomoku/src/pages/generateText.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport gomokuBoard from '../images/gomokuBoard.png'\nimport blackPiece from '../images/blackPiece.png'\nimport whitePiece from '../images/whitePiece.png'\nimport styles from './generateText.module.css'\n\nconst loadImages = () => {\n    return new Promise((resolve, reject) => {\n        const imagesToLoad = [gomokuBoard, blackPiece, whitePiece]\n        var imagesLoaded = 0\n        var images = []\n        for (var c = 0; c < imagesToLoad.length; c++){\n            images[c] = new Image()\n            images[c].src = imagesToLoad[c]\n            images[c].onload = () => {\n                imagesLoaded += 1\n                if (imagesLoaded === imagesToLoad.length)\n                    resolve(images)\n            }\n        }\n    })\n}\n\nconst getText = () => {\n    return (\n        [\n            [1, 1, 1, 1],\n            [1, 0, 0, 1],\n            [1, 1, 1, 1],\n            [1, 0, 0, 1],\n            [1, 0, 0, 1]\n        ]\n    )\n}\n\nconst printText = (data, images, text) => {\n    for (var y = 0; y < text.length; y++){\n        for (var x = 0; x < text[y].length; x++){\n            data.ctx.drawImage(images[data.BLACKPIECE], )\n        }\n    }\n\n}\n\nconst write = images => {\n    const data = {}\n    data.GOMOKUBOARD = 0\n    data.WHITEPIECE = 1\n    data.BLACKPIECE = 2\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    // data.ctx.drawImage(images[GOMOKUBOARD], 0, 0)\n    // data.ctx.drawImage(images[GOMOKUBOARD], images[GOMOKUBOARD].width, 0)\n    console.log(images[data.GOMOKUBOARD])\n    const text = getText()\n    printText(data, images, text)\n}\n\nconst GenerateText = () => {\n    const [images, setImages] = useState(false)\n    \n\n    useEffect(() => {\n        if (!images){\n            loadImages().then(images => {\n                setImages(images)\n            })\n        }\n        else\n            write(images)\n    })\n    if (images)\n        return (\n            <div>\n                <canvas id='canvas' width=\"5000\" height=\"5000\" className={styles.canvas}>\n                    Impossible to load the canvas...\n                </canvas>\n            </div>\n        )\n    return (\n        <div>\n            CHARGEMENT...\n        </div>\n    )\n}\n\nexport default GenerateText"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}