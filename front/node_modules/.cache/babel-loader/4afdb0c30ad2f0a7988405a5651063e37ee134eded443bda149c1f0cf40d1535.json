{"ast":null,"code":"const singleStoneHeuristic = (board, node) => {\n  var h = 10;\n  var free = 1;\n  if (!board[node.y - 1][node.x]) free += 1;\n  if (!board[node.y][node.x + 1]) free += 1;\n  if (!board[node.y + 1][node.x]) free += 1;\n  if (!board[node.y][node.x - 1]) free += 1;\n  h = h * free;\n  if (board[node.y][node.x] === data.iaColor) return h;\n  return -h;\n};\nconst getHeuristic = (node, data) => {\n  const start = window.performance.now();\n  var board = getBoard(node, data.board);\n  var h1 = 0;\n  var h2 = 0;\n  while (node.parent) {\n    h1 += singleStoneHeuristic(board, node, data);\n    // h2 += alignmentHeuristic(board, node)\n    node = node.parent;\n  }\n  const end = window.performance.now();\n  data.heuristicTime += end - start;\n  return h1 + h2;\n};","map":{"version":3,"names":["singleStoneHeuristic","board","node","h","free","y","x","data","iaColor","getHeuristic","start","window","performance","now","getBoard","h1","h2","parent","end","heuristicTime"],"sources":["/Users/adauchy/work/ft/myGomokuGit/gomoku/src/tools/ia/heuristic2.js"],"sourcesContent":["const singleStoneHeuristic = (board, node) => {\n    var h = 10\n    var free = 1\n    if (!board[node.y - 1][node.x])\n        free +=1\n    if (!board[node.y][node.x + 1])\n        free +=1\n    if (!board[node.y + 1][node.x])\n        free +=1\n    if (!board[node.y][node.x - 1])\n        free +=1\n    h = h * free\n    if (board[node.y][node.x] === data.iaColor)\n        return h\n    return -h\n}\n\nconst getHeuristic = (node, data) => {\n    const start = window.performance.now()\n    var board = getBoard(node, data.board)\n    var h1 = 0\n    var h2 = 0\n    while (node.parent){\n        h1 += singleStoneHeuristic(board, node, data)\n        // h2 += alignmentHeuristic(board, node)\n        node = node.parent\n    }\n    const end = window.performance.now()\n    data.heuristicTime += end - start\n    return h1 + h2\n}"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,CAACC,KAAK,EAAEC,IAAI,KAAK;EAC1C,IAAIC,CAAC,GAAG,EAAE;EACV,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAI,CAACH,KAAK,CAACC,IAAI,CAACG,CAAC,GAAG,CAAC,CAAC,CAACH,IAAI,CAACI,CAAC,CAAC,EAC1BF,IAAI,IAAG,CAAC;EACZ,IAAI,CAACH,KAAK,CAACC,IAAI,CAACG,CAAC,CAAC,CAACH,IAAI,CAACI,CAAC,GAAG,CAAC,CAAC,EAC1BF,IAAI,IAAG,CAAC;EACZ,IAAI,CAACH,KAAK,CAACC,IAAI,CAACG,CAAC,GAAG,CAAC,CAAC,CAACH,IAAI,CAACI,CAAC,CAAC,EAC1BF,IAAI,IAAG,CAAC;EACZ,IAAI,CAACH,KAAK,CAACC,IAAI,CAACG,CAAC,CAAC,CAACH,IAAI,CAACI,CAAC,GAAG,CAAC,CAAC,EAC1BF,IAAI,IAAG,CAAC;EACZD,CAAC,GAAGA,CAAC,GAAGC,IAAI;EACZ,IAAIH,KAAK,CAACC,IAAI,CAACG,CAAC,CAAC,CAACH,IAAI,CAACI,CAAC,CAAC,KAAKC,IAAI,CAACC,OAAO,EACtC,OAAOL,CAAC;EACZ,OAAO,CAACA,CAAC;AACb,CAAC;AAED,MAAMM,YAAY,GAAG,CAACP,IAAI,EAAEK,IAAI,KAAK;EACjC,MAAMG,KAAK,GAAGC,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE;EACtC,IAAIZ,KAAK,GAAGa,QAAQ,CAACZ,IAAI,EAAEK,IAAI,CAACN,KAAK,CAAC;EACtC,IAAIc,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAG,CAAC;EACV,OAAOd,IAAI,CAACe,MAAM,EAAC;IACfF,EAAE,IAAIf,oBAAoB,CAACC,KAAK,EAAEC,IAAI,EAAEK,IAAI,CAAC;IAC7C;IACAL,IAAI,GAAGA,IAAI,CAACe,MAAM;EACtB;EACA,MAAMC,GAAG,GAAGP,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE;EACpCN,IAAI,CAACY,aAAa,IAAID,GAAG,GAAGR,KAAK;EACjC,OAAOK,EAAE,GAAGC,EAAE;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}