{"ast":null,"code":"import inForcedMoves from '../../tools/inForcedMoves';\nimport updateCapturedStones from '../../tools/updateCapturedStones';\nimport checkEndGame from '../../tools/checkEndGame';\nimport launchPutStoneAnimation from '../../tools/launchPutStoneAnimation';\nimport launchCaptureAnimation from '../../tools/launchCaptureAnimation';\nimport printBoard from '../../tools/printBoard';\nimport { getStonePosition, initBoard, serverIp } from '../../tools/tools';\nimport { io } from \"socket.io-client\";\nimport styles from './humanVsAi.module.css';\nimport tick from '../../';\nconst canvasOnMouseMove = (e, data) => {\n  data.mouseEvent = e;\n  if (!data.mouseEvent) return;\n  if (data.endGame || data.turn === 'ai' || data.ongoingAnimation) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (stone.y === 19) return;\n  if (!data.board[stone.y][stone.x] && inForcedMoves(data, stone.x, stone.y)) {\n    var audio = new Audio(tick);\n    audio.play();\n    printBoard(data);\n    data.ctx.globalAlpha = 0.5;\n    data.ctx.drawImage(data.playerColor === data.WHITE ? data.images.whitePiece : data.images.blackPiece, data.images.gomokuBoard.width * stone.x, data.images.gomokuBoard.height * stone.y);\n    data.ctx.globalAlpha = 1;\n  } else printBoard(data);\n};\nconst printEndGameStatus = data => {\n  var params = {};\n  params[data.DRAW] = {\n    text: 'END OF GAME, NO WINNER',\n    color: 'orange'\n  };\n  params[data.playerColor] = {\n    text: 'YOU WON THE GAME !',\n    color: 'green'\n  };\n  params[data.aiColor] = {\n    text: 'YOU LOST THE GAME',\n    color: 'red'\n  };\n  document.getElementById('endGame').style.color = params[data.endGame].color;\n  document.getElementById('endGame').innerHTML = params[data.endGame].text;\n  document.getElementById('newGame').style.display = 'block';\n};\nconst setEndGame = data => {\n  printEndGameStatus(data);\n  data.socket.disconnect();\n};\nconst launchAi = data => {\n  data.startAi = window.performance.now();\n  data.aiLaunched = true;\n  data.socket.emit('ai', {\n    aiColor: data.aiColor,\n    blackCaptures: data.captures.black,\n    whiteCaptures: data.captures.white,\n    board: data.board\n  });\n};\nconst goToNextPlayer = (data, nextPlayer, color, captures) => {\n  if (captures) updateCapturedStones(data, color, captures, styles);\n  if (data.endGame = checkEndGame(data)) {\n    setEndGame(data);\n    return;\n  }\n  if (nextPlayer === 'human') {\n    data.turn = 'human';\n    data.aiLaunched = false;\n    data.ongoingAnimation = 0;\n    canvasOnMouseMove(data.mouseEvent, data);\n  } else if (nextPlayer === 'ai') {\n    data.turn = 'ai';\n    data.ongoingAnimation = 0;\n    launchAi(data, data.images, data.playerColor);\n  }\n};\nconst receiveAiMove = (data, pos) => {\n  const timeAi = Math.floor(window.performance.now() - data.startAi);\n  var nbSeconds = Math.floor(timeAi / 1000) % 1000;\n  var nbMilliSeconds = `${timeAi % 1000}`.padStart(3, '0');\n  data.aiMoves += 1;\n  data.aiTotalTime += parseFloat(`${nbSeconds}.${nbMilliSeconds}`);\n  document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`;\n  document.getElementById('timerAverage').innerHTML = `${(data.aiTotalTime / data.aiMoves).toFixed(3)}s`;\n  data.ongoingAnimation = 1;\n  launchPutStoneAnimation(data, pos, data.aiColor, 'human').then(() => {\n    launchCaptureAnimation(data, pos, data.aiColor, 'human').then(captures => {\n      goToNextPlayer(data, 'human', data.aiColor, captures);\n    });\n  });\n};\nconst canvasOnClick = (e, data) => {\n  data.mouseEvent = e;\n  if (data.endGame || data.turn === 'ai' || data.ongoingAnimation) return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  if (!data.board[stone.y][stone.x] && inForcedMoves(data, stone.x, stone.y)) {\n    data.ongoingAnimation = 1;\n    launchPutStoneAnimation(data, stone, data.playerColor).then(() => {\n      launchCaptureAnimation(data, stone, data.playerColor).then(captures => {\n        goToNextPlayer(data, 'ai', data.playerColor, captures);\n      });\n    });\n  }\n};\nconst canvasOnMouseLeave = (e, data) => {\n  data.mouseEvent = false;\n  if (data.endGame || data.turn === 'ai' || data.ongoingAnimation) return;\n  printBoard(data);\n};\nconst choosenBoard = () => {\n  return [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\n};\nconst initGame = (images, playerColor, firstPlayer) => {\n  var data = {};\n  data.socket = io(serverIp, {\n    query: {\n      page: 'human vs ai'\n    }\n  });\n  data.captures = {\n    black: 0,\n    white: 0\n  };\n  data.ongoingAnimation = 0;\n  data.aiLaunched = false;\n  data.forcedMoves = [];\n  data.WHITE = 1;\n  data.BLACK = 2;\n  data.DRAW = 3;\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  // data.board = choosenBoard()\n  data.turn = firstPlayer;\n  data.aiMoves = 0;\n  data.aiTotalTime = 0;\n  data.piecesOnBoard = 0;\n  data.playerColor = playerColor;\n  data.aiColor = playerColor === data.WHITE ? data.BLACK : data.WHITE;\n  data.images = images;\n  printBoard(data);\n  data.socket.on('ai', pos => {\n    receiveAiMove(data, pos);\n  });\n  if (data.turn === 'ai') launchAi(data);\n  data.canvas.onmousemove = e => canvasOnMouseMove(e, data);\n  data.canvas.onclick = e => canvasOnClick(e, data);\n  data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data);\n  data.canvas.onmouseenter = e => canvasOnMouseMove(e, data);\n};\nexport default initGame;","map":{"version":3,"names":["inForcedMoves","updateCapturedStones","checkEndGame","launchPutStoneAnimation","launchCaptureAnimation","printBoard","getStonePosition","initBoard","serverIp","io","styles","tick","canvasOnMouseMove","e","data","mouseEvent","endGame","turn","ongoingAnimation","canvasOffsetWidth","canvas","offsetWidth","canvasOffsetHeight","offsetHeight","stone","y","board","x","audio","Audio","play","ctx","globalAlpha","drawImage","playerColor","WHITE","images","whitePiece","blackPiece","gomokuBoard","width","height","printEndGameStatus","params","DRAW","text","color","aiColor","document","getElementById","style","innerHTML","display","setEndGame","socket","disconnect","launchAi","startAi","window","performance","now","aiLaunched","emit","blackCaptures","captures","black","whiteCaptures","white","goToNextPlayer","nextPlayer","receiveAiMove","pos","timeAi","Math","floor","nbSeconds","nbMilliSeconds","padStart","aiMoves","aiTotalTime","parseFloat","toFixed","then","canvasOnClick","canvasOnMouseLeave","choosenBoard","initGame","firstPlayer","query","page","forcedMoves","BLACK","getContext","piecesOnBoard","on","onmousemove","onclick","onmouseleave","onmouseenter"],"sources":["/Users/adauchy/work/ft/gomoku/myGomokuGit/front/src/pages/humanVsAi/initGame.js"],"sourcesContent":["import inForcedMoves from '../../tools/inForcedMoves'\nimport updateCapturedStones from '../../tools/updateCapturedStones'\nimport checkEndGame from '../../tools/checkEndGame'\nimport launchPutStoneAnimation from '../../tools/launchPutStoneAnimation'\nimport launchCaptureAnimation from '../../tools/launchCaptureAnimation'\nimport printBoard from '../../tools/printBoard'\nimport { getStonePosition, initBoard, serverIp } from '../../tools/tools'\nimport { io } from \"socket.io-client\"\nimport styles from './humanVsAi.module.css'\nimport tick from '../../'\n\nconst canvasOnMouseMove = (e, data) => {\n\tdata.mouseEvent = e\n\tif (!data.mouseEvent)\n\t\treturn\n    if (data.endGame || data.turn === 'ai' || data.ongoingAnimation)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (stone.y === 19)\n        return\n    if (!data.board[stone.y][stone.x] && inForcedMoves(data, stone.x, stone.y)){\n\t\tvar audio = new Audio(tick)\n\t\taudio.play()\n        printBoard(data)\n        data.ctx.globalAlpha = 0.5\n        data.ctx.drawImage(\n            data.playerColor === data.WHITE ? data.images.whitePiece : data.images.blackPiece,\n            data.images.gomokuBoard.width * stone.x,\n            data.images.gomokuBoard.height * stone.y\n        )\n        data.ctx.globalAlpha = 1\n    }\n    else\n        printBoard(data)\n}\n\nconst printEndGameStatus = data => {\n\tvar params = {}\n    params[data.DRAW] = {\n        text : 'END OF GAME, NO WINNER',\n        color : 'orange'\n    }\n    params[data.playerColor] = {\n        text : 'YOU WON THE GAME !',\n        color : 'green'\n    }\n    params[data.aiColor] = {\n        text : 'YOU LOST THE GAME',\n        color : 'red'\n    }\n    document.getElementById('endGame').style.color = params[data.endGame].color\n    document.getElementById('endGame').innerHTML = params[data.endGame].text\n    document.getElementById('newGame').style.display = 'block'\n}\n\nconst setEndGame = data => {\n    printEndGameStatus(data)\n\tdata.socket.disconnect()\n}\n\nconst launchAi = data => {\n\tdata.startAi = window.performance.now()\n\tdata.aiLaunched = true\n\tdata.socket.emit('ai', {\n\t\taiColor : data.aiColor,\n\t\tblackCaptures : data.captures.black,\n\t\twhiteCaptures : data.captures.white,\n\t\tboard : data.board\n\t})\n}\n\nconst goToNextPlayer = (data, nextPlayer, color, captures) => {\n\tif (captures)\n\t\tupdateCapturedStones(data, color, captures, styles)\n\tif ((data.endGame = checkEndGame(data))){\n\t\tsetEndGame(data)\n\t\treturn\n\t}\n\tif (nextPlayer === 'human'){\n\t\tdata.turn = 'human'\n\t\tdata.aiLaunched = false\n\t\tdata.ongoingAnimation = 0\n\t\tcanvasOnMouseMove(data.mouseEvent, data)\n\t}\n\telse if (nextPlayer === 'ai'){\n\t\tdata.turn = 'ai'\n\t\tdata.ongoingAnimation = 0\n\t\tlaunchAi(data, data.images, data.playerColor)\n\t}\n\t\n}\n\nconst receiveAiMove = (data, pos) => {\n    const timeAi = Math.floor(window.performance.now() - data.startAi)\n    var nbSeconds = Math.floor(timeAi / 1000) % 1000\n    var nbMilliSeconds = `${timeAi % 1000}`.padStart(3, '0')\n    data.aiMoves += 1\n    data.aiTotalTime += parseFloat(`${nbSeconds}.${nbMilliSeconds}`)\n    document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`\n    document.getElementById('timerAverage').innerHTML = `${(data.aiTotalTime / data.aiMoves).toFixed(3)}s`\n\tdata.ongoingAnimation = 1\n\tlaunchPutStoneAnimation(data, pos, data.aiColor, 'human').then(() => {\n\t\tlaunchCaptureAnimation(data, pos, data.aiColor, 'human').then((captures) => {\n\t\t\tgoToNextPlayer(data, 'human', data.aiColor, captures)\n\t\t})\n\t})\n}\n\nconst canvasOnClick = (e, data) => {\n\tdata.mouseEvent = e\n    if (data.endGame || data.turn === 'ai' || data.ongoingAnimation)\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    if (!data.board[stone.y][stone.x] && inForcedMoves(data, stone.x, stone.y)){\n\t\tdata.ongoingAnimation = 1\n\t\tlaunchPutStoneAnimation(data, stone, data.playerColor).then(() => {\n\t\t\tlaunchCaptureAnimation(data, stone, data.playerColor).then((captures) => {\n\t\t\t\tgoToNextPlayer(data, 'ai', data.playerColor, captures)\n\t\t\t})\n\t\t})\n    }\n}\n\nconst canvasOnMouseLeave = (e, data) => {\n\tdata.mouseEvent = false\n    if (data.endGame || data.turn === 'ai' || data.ongoingAnimation)\n            return\n        printBoard(data)\n}\n\nconst choosenBoard = () => {\n\treturn [\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t]\n}\n\nconst initGame = (images, playerColor, firstPlayer) => {\n    var data = {}\n\tdata.socket = io(serverIp, {query : {page : 'human vs ai'}})\n\tdata.captures = {black : 0, white : 0}\n\tdata.ongoingAnimation = 0\n\tdata.aiLaunched = false\n\tdata.forcedMoves = []\n    data.WHITE = 1\n    data.BLACK = 2\n    data.DRAW = 3\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n\t// data.board = choosenBoard()\n    data.turn = firstPlayer\n    data.aiMoves = 0\n    data.aiTotalTime = 0\n    data.piecesOnBoard = 0\n    data.playerColor = playerColor\n    data.aiColor = playerColor === data.WHITE ? data.BLACK : data.WHITE\n    data.images = images\n    printBoard(data)\n\tdata.socket.on('ai', pos => {receiveAiMove(data, pos)})\n    if (data.turn === 'ai')\n        launchAi(data)\n    data.canvas.onmousemove = e => canvasOnMouseMove(e, data)\n    data.canvas.onclick = e => canvasOnClick(e, data)\n    data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data)\n\tdata.canvas.onmouseenter = e => canvasOnMouseMove(e, data)\n}\n\nexport default initGame"],"mappings":"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AC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}