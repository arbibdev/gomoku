{"ast":null,"code":"import getRandomInt from '../../tools/getRandomInt';\nconst printBackground = (data, images) => {\n  data.ctx.fillStyle = '#a6683e';\n  data.ctx.fillRect(0, 0, data.canvas.width, data.canvas.height);\n  for (var y = 0; y < 18; y++) {\n    for (var x = 0; x < 18; x++) data.ctx.drawImage(images.gomokuBoard, x * images.gomokuBoard.width + images.blackPiece.width / 2, y * images.gomokuBoard.height + images.blackPiece.width / 2);\n  }\n};\nconst initBoard = () => {\n  var board = [];\n  for (var y = 0; y < 19; y++) {\n    board[y] = [];\n    for (var x = 0; x < 19; x++) {\n      board[y][x] = 0;\n    }\n  }\n  return board;\n};\nconst printStones = (data, images) => {\n  for (var y = 0; y < 19; y++) {\n    for (var x = 0; x < 19; x++) {\n      if (data.board[y][x]) {\n        var stone = data.board[y][x] === 'black' ? images.blackPiece : images.whitePiece;\n        data.ctx.drawImage(stone, images.gomokuBoard.width * x, images.gomokuBoard.height * y);\n      }\n    }\n  }\n};\nconst printBoard = (data, images) => {\n  printBackground(data, images);\n  printStones(data, images);\n};\nconst getStonePosition = (data, e, canvasOffsetWidth, canvasOffsetHeight) => {\n  return {\n    x: Math.floor(e.offsetX * data.canvas.width / canvasOffsetWidth / (data.canvas.width / 19)),\n    y: Math.floor(e.offsetY * data.canvas.height / canvasOffsetHeight / (data.canvas.height / 19))\n  };\n};\nconst playRandom = (data, playerColor) => {\n  var x = getRandomInt(19);\n  var y = getRandomInt(19);\n  while (data.board[y][x]) {\n    x++;\n    if (x === 19) {\n      x = 0;\n      y++;\n    }\n    if (y === 19) y = 0;\n  }\n  data.board[y][x] = playerColor === 'black' ? 'white' : 'black';\n};\nconst ia = (data, playerColor) => {\n  playRandom(data, playerColor);\n  // for (var c = 0; c < 1000000000; c++);\n};\n\nconst canvasOnMouseMove = (e, data, images, playerColor) => {\n  if (data.turn === 'ia') return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  printBoard(data, images);\n  data.ctx.drawImage(playerColor === 'white' ? images.whitePiece : images.blackPiece, images.gomokuBoard.width * stone.x, images.gomokuBoard.height * stone.y);\n};\nconst launchIa = (data, images, playerColor) => {\n  const startIa = Date.now();\n  ia(data, playerColor);\n  const timeIa = Date.now() - startIa;\n  var nbSeconds = Math.floor(timeIa / 1000) % 1000;\n  var nbMilliSeconds = `${timeIa % 1000}`.padStart(3, '0');\n  document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`;\n  // document.getElementById('timer').innerHTML = timeIa % 1000000 / 1000\n  console.log(`IA'S RESPONSE : ${nbSeconds},${nbMilliSeconds} seconds`);\n  printBoard(data, images);\n  data.turn = 'human';\n};\nconst canvasOnClick = (e, data, images, playerColor) => {\n  if (data.turn === 'ia') return;\n  var canvasOffsetWidth = data.canvas.offsetWidth;\n  var canvasOffsetHeight = data.canvas.offsetHeight;\n  var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight);\n  data.board[stone.y][stone.x] = playerColor;\n  printBoard(data, images);\n  data.turn = 'ia';\n  launchIa(data, images, playerColor);\n};\nconst canvasOnMouseLeave = (e, data, images) => {\n  if (data.turn === 'ia') return;\n  printBoard(data, images);\n};\nconst initGame = (images, playerColor, firstPlayer) => {\n  var data = {};\n  data.canvas = document.getElementById('canvas');\n  data.ctx = data.canvas.getContext('2d');\n  data.board = initBoard();\n  data.turn = firstPlayer;\n  data.iaMoves = 0;\n  printBoard(data, images);\n  if (data.turn === 'ia') launchIa(data, images, playerColor);\n  data.canvas.onmousemove = e => canvasOnMouseMove(e, data, images, playerColor);\n  data.canvas.onclick = e => canvasOnClick(e, data, images, playerColor);\n  data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data, images);\n};\nexport default initGame;","map":{"version":3,"names":["getRandomInt","printBackground","data","images","ctx","fillStyle","fillRect","canvas","width","height","y","x","drawImage","gomokuBoard","blackPiece","initBoard","board","printStones","stone","whitePiece","printBoard","getStonePosition","e","canvasOffsetWidth","canvasOffsetHeight","Math","floor","offsetX","offsetY","playRandom","playerColor","ia","canvasOnMouseMove","turn","offsetWidth","offsetHeight","launchIa","startIa","Date","now","timeIa","nbSeconds","nbMilliSeconds","padStart","document","getElementById","innerHTML","console","log","canvasOnClick","canvasOnMouseLeave","initGame","firstPlayer","getContext","iaMoves","onmousemove","onclick","onmouseleave"],"sources":["/Users/adauchy/work/ft/gomokuGit/gomoku/src/pages/humanvsia/initGame.js"],"sourcesContent":["import getRandomInt from '../../tools/getRandomInt'\n\nconst printBackground = (data, images) => {\n    data.ctx.fillStyle = '#a6683e'\n    data.ctx.fillRect(0, 0, data.canvas.width, data.canvas.height)\n    for (var y = 0; y < 18; y++){\n        for (var x = 0; x < 18; x++)\n            data.ctx.drawImage(\n                images.gomokuBoard,\n                x * images.gomokuBoard.width + images.blackPiece.width / 2,\n                y * images.gomokuBoard.height + images.blackPiece.width / 2\n            )\n    }\n}\n\nconst initBoard = () => {\n    var board = []\n    for (var y = 0; y < 19; y++){\n        board[y] = []\n        for (var x = 0; x < 19; x++){\n            board[y][x] = 0\n        }\n    }\n    return board\n}\n\nconst printStones = (data, images) => {\n    for (var y = 0; y < 19; y++){\n        for (var x = 0; x < 19; x++){\n            if (data.board[y][x]){\n                var stone = data.board[y][x] === 'black' ? images.blackPiece : images.whitePiece\n                data.ctx.drawImage(\n                    stone,\n                    images.gomokuBoard.width * x,\n                    images.gomokuBoard.height * y\n                )\n            }\n        }\n    }\n}\n\nconst printBoard = (data, images) => {\n    printBackground(data, images)\n    printStones(data, images)\n}\n\nconst getStonePosition = (data, e, canvasOffsetWidth, canvasOffsetHeight) => {\n    return {\n        x : Math.floor(((e.offsetX * data.canvas.width) / canvasOffsetWidth) / (data.canvas.width / 19)),\n        y : Math.floor(((e.offsetY * data.canvas.height) / canvasOffsetHeight) / (data.canvas.height / 19))\n    }\n}\n\nconst playRandom = (data, playerColor) => {\n    var x = getRandomInt(19)\n    var y = getRandomInt(19)\n    while (data.board[y][x]){\n        x++\n        if (x === 19){\n            x = 0\n            y++\n        }\n        if (y === 19)\n            y = 0\n    }\n    data.board[y][x] = playerColor === 'black' ? 'white' : 'black'\n}\n\nconst ia = (data, playerColor) => {\n    playRandom(data, playerColor)\n    // for (var c = 0; c < 1000000000; c++);\n\n}\n\nconst canvasOnMouseMove = (e, data, images, playerColor) => {\n    if (data.turn === 'ia')\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    printBoard(data, images)\n    data.ctx.drawImage(\n        playerColor === 'white' ? images.whitePiece : images.blackPiece,\n        images.gomokuBoard.width * stone.x,\n        images.gomokuBoard.height * stone.y\n    )\n}\n\nconst launchIa = (data, images, playerColor) => {\n    const startIa = Date.now();\n    ia(data, playerColor)\n    const timeIa = Date.now() - startIa\n    var nbSeconds = Math.floor(timeIa / 1000) % 1000\n    var nbMilliSeconds = `${timeIa % 1000}`.padStart(3, '0')\n    document.getElementById('timer').innerHTML = `${nbSeconds},${nbMilliSeconds}s`\n    // document.getElementById('timer').innerHTML = timeIa % 1000000 / 1000\n    console.log(`IA'S RESPONSE : ${nbSeconds},${nbMilliSeconds} seconds`)\n    printBoard(data, images)\n    data.turn = 'human'\n}\n\nconst canvasOnClick = (e, data, images, playerColor) => {\n    if (data.turn === 'ia')\n        return\n    var canvasOffsetWidth = data.canvas.offsetWidth\n    var canvasOffsetHeight = data.canvas.offsetHeight\n    var stone = getStonePosition(data, e, canvasOffsetWidth, canvasOffsetHeight)\n    data.board[stone.y][stone.x] = playerColor\n    printBoard(data, images)\n    data.turn = 'ia'\n    launchIa(data, images, playerColor)\n}\n\nconst canvasOnMouseLeave = (e, data, images) => {\n    if (data.turn === 'ia')\n            return\n        printBoard(data, images)\n}\n\nconst initGame = (images, playerColor, firstPlayer) => {\n    var data = {}\n    data.canvas = document.getElementById('canvas')\n    data.ctx = data.canvas.getContext('2d')\n    data.board = initBoard()\n    data.turn = firstPlayer\n    data.iaMoves = 0\n    printBoard(data, images)\n    if (data.turn === 'ia')\n        launchIa(data, images, playerColor)\n    data.canvas.onmousemove = e => canvasOnMouseMove(e, data, images, playerColor)\n    data.canvas.onclick = e => canvasOnClick(e, data, images, playerColor)\n    data.canvas.onmouseleave = e => canvasOnMouseLeave(e, data, images)\n}\n\nexport default initGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}